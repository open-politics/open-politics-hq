services:
  db:
    restart: "no"
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:80"

  # adminer:
  #   restart: "no"
  #   ports:
  #     - "8080:8080"

  backend:
    restart: "no"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend/:/app
      - ./backend/openapi.json:/app/openapi.json
      - ~/fullstack/opol/opol/python-client/opol:/app/opol
    environment:
      - PORT=${BACKEND_PORT}
      - OPOL_DEV_MODE=true
    command: ["bash", "/app/start-reload.sh"]
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}  
    networks:
      - default
  
  frontend:
    restart: "no"
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:${BACKEND_PORT}
    env_file:
      - .env
    volumes:
      - ./frontend:/app
      - ./backend/openapi.json:/app/openapi.json
    networks:
      - default

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
    env_file:
      - .env
    command: ["minio", "server", "/data", "--console-address", ":9001"]
    volumes:
      - ./.store/minio:/data
    networks:
      - default

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_MAX_LOADED_MODELS=2
    restart: unless-stopped
    networks:
      - default

networks:
  default:
    external: false

volumes:
  app-db-data:
  redis_data:
  searxng_data:
  minio:
  ollama_data:
    name: ollama_data
