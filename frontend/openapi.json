{
  "openapi": "3.1.0",
  "info": {
    "title": "Open Politics Project",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/assets/infospaces/{infospace_id}/assets/": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Asset",
        "description": "Generic asset creation endpoint that routes to appropriate specific endpoint.\n\nThis endpoint maintains backward compatibility while using the new ContentService.\nBased on the asset data provided, it routes to the appropriate ingestion method:\n- If source_identifier (URL) is provided: ingest as web content\n- If text_content is provided: ingest as text\n- Otherwise: create a basic asset record",
        "operationId": "create_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "List Assets",
        "description": "Retrieve assets for an infospace.",
        "operationId": "list_assets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "parent_asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Asset",
        "description": "Generic asset creation endpoint that routes to appropriate specific endpoint.\n\nThis endpoint maintains backward compatibility while using the new ContentService.\nBased on the asset data provided, it routes to the appropriate ingestion method:\n- If source_identifier (URL) is provided: ingest as web content\n- If text_content is provided: ingest as text\n- Otherwise: create a basic asset record",
        "operationId": "create_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "List Assets",
        "description": "Retrieve assets for an infospace.",
        "operationId": "list_assets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "parent_asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/upload": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Upload File",
        "description": "Upload a file and create an asset.",
        "operationId": "upload_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-upload_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/ingest-url": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Url",
        "description": "Ingest content from a URL.",
        "operationId": "ingest_url",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "scrape_immediately",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Scrape Immediately"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/ingest-text": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Text",
        "description": "Ingest direct text content.",
        "operationId": "ingest_text",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "text_content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Content"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "event_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Timestamp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/bulk-ingest-urls": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Bulk Ingest Urls",
        "description": "Ingest multiple URLs as separate assets.",
        "operationId": "bulk_ingest_urls",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUrlIngestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Bulk Ingest Urls"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/{asset_id}/reprocess": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Reprocess Asset",
        "description": "Reprocess an asset with new options.",
        "operationId": "reprocess_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReprocessOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/{asset_id}": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Asset",
        "description": "Get a specific asset.",
        "operationId": "get_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Update Asset",
        "description": "Update an asset.",
        "operationId": "update_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Delete Asset",
        "description": "Delete an asset and its children.",
        "operationId": "delete_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/{asset_id}/children": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Asset Children",
        "description": "Get child assets of a specific asset.",
        "operationId": "get_asset_children",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Get Asset Children"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/supported-types": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Supported Content Types",
        "description": "Get list of supported content types.",
        "operationId": "get_supported_content_types",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Assets-Get Supported Content Types"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/bulk-upload-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Assets Background Bulk",
        "description": "Upload multiple files as individual assets using background processing.\nReturns task IDs for progress tracking.",
        "operationId": "create_assets_background_bulk",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-create_assets_background_bulk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Create Assets Background Bulk"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/bulk-urls-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Assets Background Urls",
        "description": "Ingest multiple URLs using background processing.\nReturns task ID for progress tracking.",
        "operationId": "create_assets_background_urls",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUrlIngestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Create Assets Background Urls"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/bundles/{bundle_id}/add-files-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Add Files To Bundle Background",
        "description": "Add files to existing bundle using background processing.",
        "operationId": "add_files_to_bundle_background",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-add_files_to_bundle_background"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Add Files To Bundle Background"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/infospaces/{infospace_id}/assets/tasks/{task_id}/status": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Task Status",
        "description": "Get the status of a background task.",
        "operationId": "get_task_status",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Get Task Status"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Run",
        "description": "Create a new Run.",
        "operationId": "create_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "List Runs",
        "description": "Retrieve Runs for the infospace.",
        "operationId": "list_runs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Run",
        "description": "Create a new Run.",
        "operationId": "create_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "List Runs",
        "description": "Retrieve Runs for the infospace.",
        "operationId": "list_runs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}": {
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Get Run",
        "description": "Retrieve a specific Run by its ID.",
        "operationId": "get_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Update Run",
        "description": "Update a Run.",
        "operationId": "update_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Delete Run",
        "description": "Delete a Run.",
        "operationId": "delete_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}/retry_failures": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Retry Failed Annotations",
        "description": "Retry failed annotations in a run.",
        "operationId": "retry_failed_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}/create_package": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Package From Run Endpoint",
        "description": "Create a package from a run.",
        "operationId": "create_package_from_run_endpoint",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePackageFromRunRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_schemes/infospaces/{infospace_id}/annotation_schemas/": {
      "post": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "Create Annotation Schema",
        "description": "Create a new Annotation Schema.",
        "operationId": "create_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "List Annotation Schemas",
        "description": "Retrieve Annotation Schemas for the infospace.",
        "operationId": "list_annotation_schemas",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_schemes/infospaces/{infospace_id}/annotation_schemas": {
      "post": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "Create Annotation Schema",
        "description": "Create a new Annotation Schema.",
        "operationId": "create_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "List Annotation Schemas",
        "description": "Retrieve Annotation Schemas for the infospace.",
        "operationId": "list_annotation_schemas",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_schemes/infospaces/{infospace_id}/annotation_schemas/{schema_id}": {
      "get": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "Get Annotation Schema",
        "description": "Retrieve a specific Annotation Schema by its ID.",
        "operationId": "get_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "Update Annotation Schema",
        "description": "Update an Annotation Schema.",
        "operationId": "update_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotation_schemes",
          "AnnotationSchemas"
        ],
        "summary": "Delete Annotation Schema",
        "description": "Delete an annotation schema.\n\nArgs:\n    current_user: The current user\n    infospace_id: ID of the infospace\n    schema_id: ID of the schema to delete\n    session: Database session\n    \nRaises:\n    HTTPException: If schema not found or user lacks access",
        "operationId": "delete_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Annotation",
        "description": "Create a new annotation.",
        "operationId": "create_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "List Annotations",
        "description": "Retrieve Annotations for the infospace.",
        "operationId": "list_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Annotation",
        "description": "Create a new annotation.",
        "operationId": "create_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "List Annotations",
        "description": "Retrieve Annotations for the infospace.",
        "operationId": "list_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/{annotation_id}": {
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Get Annotation",
        "description": "Retrieve a specific Annotation by its ID.",
        "operationId": "get_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Update Annotation",
        "description": "Update an Annotation.",
        "operationId": "update_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Delete Annotation",
        "description": "Delete an Annotation.",
        "operationId": "delete_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/batch": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Batch Annotations",
        "description": "Create multiple annotations in a batch.",
        "operationId": "create_batch_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnnotationCreate"
                },
                "title": "Annotations"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/run/{run_id}/results": {
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Get Run Results",
        "description": "Retrieve all annotations for a specific AnnotationRun.\nThe service handles run ownership and infospace context verification.",
        "operationId": "get_run_results",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationRead"
                  },
                  "title": "Response Annotations-Get Run Results"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/{annotation_id}/retry": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Retry Single Annotation",
        "description": "Retries a single failed annotation synchronously.",
        "operationId": "retry_single_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/run/{run_id}/retry_failed": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Retry Failed Annotations",
        "description": "Triggers a retry of all failed annotations in a run.",
        "operationId": "retry_failed_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/infospaces/{infospace_id}/bundles": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Create Bundle",
        "description": "Create a new bundle in an infospace.",
        "operationId": "create_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Bundles",
        "description": "Get bundles for an infospace.",
        "operationId": "get_bundles",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BundleRead"
                  },
                  "title": "Response Bundles-Get Bundles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Bundle",
        "description": "Get a bundle by ID.",
        "operationId": "get_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bundles"
        ],
        "summary": "Update Bundle",
        "description": "Update a bundle.",
        "operationId": "update_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "summary": "Delete Bundle",
        "description": "Delete a bundle.",
        "operationId": "delete_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}/assets/{asset_id}": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Add Asset To Bundle",
        "description": "Add an existing asset to a bundle by ID.",
        "operationId": "add_asset_to_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "summary": "Remove Asset From Bundle",
        "description": "Remove an asset from a bundle by ID.",
        "operationId": "remove_asset_from_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}/assets": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Assets In Bundle",
        "description": "Get assets for a bundle.",
        "operationId": "get_assets_in_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Bundles-Get Assets In Bundle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/assets/{asset_id}": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Asset",
        "description": "Get an asset by ID.",
        "operationId": "get_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}/transfer": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Transfer Bundle",
        "description": "Transfer a bundle to another infospace.",
        "operationId": "transfer_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "target_infospace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Infospace Id"
            }
          },
          {
            "name": "copy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Copy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset within a specific infospace.",
        "operationId": "create_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "List Datasets",
        "description": "Retrieve datasets within a specific infospace.",
        "operationId": "list_datasets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset within a specific infospace.",
        "operationId": "create_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "List Datasets",
        "description": "Retrieve datasets within a specific infospace.",
        "operationId": "list_datasets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Get Dataset",
        "description": "Get a specific dataset by ID.",
        "operationId": "get_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "Update a dataset.",
        "operationId": "update_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "Delete a dataset.",
        "operationId": "delete_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/{dataset_id}/export": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Export Dataset",
        "description": "Export a specific dataset as a self-contained package (ZIP).",
        "operationId": "export_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include full text content of data records",
              "default": false,
              "title": "Include Content"
            },
            "description": "Include full text content of data records"
          },
          {
            "name": "include_results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include associated classification results",
              "default": false,
              "title": "Include Results"
            },
            "description": "Include associated classification results"
          },
          {
            "name": "include_source_files",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include original source files (PDFs, CSVs, etc.)",
              "default": true,
              "title": "Include Source Files"
            },
            "description": "Include original source files (PDFs, CSVs, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/import": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Import Dataset",
        "description": "Import a dataset from an exported Dataset Package file.",
        "operationId": "import_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "conflict_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "How to handle conflicts",
              "default": "skip",
              "title": "Conflict Strategy"
            },
            "description": "How to handle conflicts"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_datasets-import_dataset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/import_from_token": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Import Dataset From Token",
        "description": "Import a dataset into the target infospace using a share token.\nThis internally performs an export from the source and then an import.",
        "operationId": "import_dataset_from_token",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "share_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Share token for the dataset",
              "title": "Share Token"
            },
            "description": "Share token for the dataset"
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include full text content if available",
              "default": false,
              "title": "Include Content"
            },
            "description": "Include full text content if available"
          },
          {
            "name": "include_results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include classification results if available",
              "default": false,
              "title": "Include Results"
            },
            "description": "Include classification results if available"
          },
          {
            "name": "conflict_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "How to handle conflicts",
              "default": "skip",
              "title": "Conflict Strategy"
            },
            "description": "How to handle conflicts"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "File Upload",
        "description": "Upload a file to the configured storage provider.\nExpects form-data with a file.\nGenerates a unique object name based on user ID and filename.",
        "operationId": "file_upload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_filestorage-file_upload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/download": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "File Download",
        "description": "Download a file from the storage provider.\nExpects query parameter 'file_path' (the object name).\nThe file is saved temporarily and a background task deletes the temp file.",
        "operationId": "file_download",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/list": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "List Files",
        "description": "List files in the storage provider with user authorization.\nUsers can only list files in their own directory.",
        "operationId": "list_files",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            }
          },
          {
            "name": "max_keys",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Max Keys"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/delete": {
      "delete": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "Delete File",
        "description": "Delete a file with proper authorization checks.\nUsers can only delete files in their own directory.",
        "operationId": "delete_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "object_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/stream/{file_path}": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "Stream File",
        "description": "Stream a file directly from storage without creating temporary files.\nThis is more efficient for media files (images, videos, PDFs) that need to be displayed in browsers.",
        "operationId": "stream_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/healthz/readiness": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Readyz",
        "operationId": "readyz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/healthz/liveness": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Liveness",
        "operationId": "liveness",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/healthz/healthz": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Healthz",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/": {
      "post": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Create Infospace",
        "description": "Create a new Infospace.",
        "operationId": "create_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "List Infospaces",
        "description": "Retrieve Infospaces for the current user.",
        "operationId": "list_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospacesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces": {
      "post": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Create Infospace",
        "description": "Create a new Infospace.",
        "operationId": "create_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "List Infospaces",
        "description": "Retrieve Infospaces for the current user.",
        "operationId": "list_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospacesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/{infospace_id}": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Get Infospace",
        "description": "Retrieve a specific Infospace by its ID.",
        "operationId": "get_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Update Infospace",
        "description": "Update an Infospace.",
        "operationId": "update_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Delete Infospace",
        "description": "Delete an Infospace.",
        "operationId": "delete_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/{infospace_id}/stats": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Get Infospace Stats",
        "description": "Get statistics about an Infospace.",
        "operationId": "get_infospace_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Infospaces-Get Infospace Stats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/import": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Import Infospace",
        "description": "Import an Infospace.",
        "operationId": "import_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery-html-content/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "recover_password_html_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search_histories/create": {
      "post": {
        "tags": [
          "search-history"
        ],
        "summary": "Create Search History",
        "description": "Create a new search history entry.",
        "operationId": "create_search_history",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchHistoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search_histories/read": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Read Search Histories",
        "description": "Retrieve search histories for the current user.",
        "operationId": "read_search_histories",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/{infospace_id}/links": {
      "post": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Create Shareable Link",
        "description": "Create a new shareable link for a resource within an infospace.",
        "operationId": "create_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareableLinkCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Get Shareable Links",
        "description": "Get shareable links for the current user, optionally filtered by resource and infospace.",
        "operationId": "get_shareable_links",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ResourceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/links/{token}": {
      "get": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Get Shareable Link By Token",
        "description": "Get a shareable link by token.",
        "operationId": "get_shareable_link_by_token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/links/{link_id}": {
      "put": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Update Shareable Link",
        "description": "Update a shareable link by its ID (owner only).",
        "operationId": "update_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Link Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareableLinkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Delete Shareable Link",
        "description": "Delete a shareable link by its ID (owner only).",
        "operationId": "delete_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Link Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/access/{token}": {
      "get": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Access Shared Resource",
        "description": "Access the resource associated with a shareable link token.",
        "operationId": "access_shared_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Shareables-Access Shared Resource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/{infospace_id}/stats": {
      "get": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Get Sharing Stats",
        "description": "Get sharing statistics for the current user within a specific infospace.",
        "operationId": "get_sharing_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/{infospace_id}/export": {
      "post": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Export Resource",
        "description": "Export a resource from a specific infospace to a file.\nReturns a file download.",
        "operationId": "export_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_shareables-export_resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/import/{target_infospace_id}": {
      "post": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Import Resource",
        "description": "Import a resource from a file into a specific infospace.",
        "operationId": "import_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_shareables-import_resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shareables/shareables/{infospace_id}/export-batch": {
      "post": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "Export Resources Batch",
        "description": "Export multiple resources of the same type to a ZIP archive.",
        "operationId": "export_resources_batch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful batch export, returns a ZIP archive.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., no resource IDs)"
          },
          "403": {
            "description": "Forbidden (e.g., permission denied for one or more resources)"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/shareables/shareables/view_dataset_package_summary/{token}": {
      "get": {
        "tags": [
          "shareables",
          "shareables"
        ],
        "summary": "View Dataset Package Summary",
        "description": "Get a summary of a shared dataset package using its token.\nDoes not trigger a full download or import of the package data.",
        "operationId": "view_dataset_package_summary",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetPackageSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/password": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/open": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User Open",
        "description": "Create new user without the need to be logged in.",
        "operationId": "create_user_open",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateOpen"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "read_user_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "update_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "delete_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/test-email/": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "test_email",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email To"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/healthz": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Healthz",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/healthz/readiness": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Readyz",
        "operationId": "readyz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/healthz/liveness": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Liveness",
        "operationId": "liveness",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/extract-pdf-text": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Extract Pdf Text",
        "description": "Extract text from PDF without authentication",
        "operationId": "extract_pdf_text",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_utils-extract_pdf_text"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/extract-pdf-metadata": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Extract Pdf Metadata",
        "description": "Extract metadata from PDF including title, author, etc.",
        "operationId": "extract_pdf_metadata",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_utils-extract_pdf_metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/scrape_article": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Scrape Article",
        "description": "Scrape article content from a URL using the centralized OPOL instance.\n\nArgs:\n    url: The URL of the article to scrape\n    \nReturns:\n    The scraped article content",
        "operationId": "scrape_article",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/providers": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Providers",
        "description": "Returns a hardcoded list of available classification providers and their models.\nThis is a temporary solution to bypass dynamic discovery issues.",
        "operationId": "get_providers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Search Entities",
        "description": "Search and paginate through entities based on a query.",
        "operationId": "search_entities",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query for entities",
              "title": "Query"
            },
            "description": "Search query for entities"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/by_entity": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Entity Details",
        "description": "Retrieve detailed information about a specific entity.",
        "operationId": "get_entity_details",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Entity for details",
              "title": "Entity"
            },
            "description": "Entity for details"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location}/contents": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Contents",
        "description": "Get articles related to a location with basic pagination.",
        "operationId": "get_location_contents",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location}/entities/contents": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Entities Contents",
        "description": "Get articles related to a location with basic pagination.",
        "operationId": "get_location_entities_contents",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/location_from_query": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Location From Query",
        "operationId": "location_from_query",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/geojson/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Geojson View",
        "operationId": "geojson_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/geojson_events": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Geojson Events View",
        "operationId": "geojson_events_view",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/dashboard": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Dashboard View",
        "operationId": "dashboard_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location_name}/entities": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Entities",
        "operationId": "get_location_entities",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "min_relevance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0,
              "title": "Min Relevance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/leaders/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Leader Info",
        "operationId": "get_leader_info",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/legislation/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Legislation Data",
        "operationId": "get_legislation_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/econ_data/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Econ Data",
        "operationId": "get_econ_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "GDP",
                "GDP_GROWTH"
              ],
              "title": "Indicators"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/update_leaders/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Update Leaders",
        "operationId": "update_leaders",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/get_articles": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Tavily Data",
        "operationId": "get_tavily_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/get_coordinates": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Coordinates",
        "description": "Fetches the coordinates, bounding box, and location type for a given location.",
        "operationId": "get_coordinates",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en",
              "title": "Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/get_geojson_for_article_ids": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Get Geojson For Article Ids",
        "operationId": "get_geojson_for_article_ids",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Article Ids"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/metadata/{location}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Metadata",
        "description": "Get metadata about a location including supported features",
        "operationId": "get_location_metadata",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/channel/{service_name}/{path}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Channel Route",
        "description": "A channel route that forwards requests to a specified service.",
        "operationId": "channel_route",
        "parameters": [
          {
            "name": "service_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Name"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Path"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/contents": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Contents",
        "operationId": "get_contents",
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SearchType",
              "default": "semantic"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "news_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "News Category"
            }
          },
          {
            "name": "secondary_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Secondary Categories"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keyword"
            }
          },
          {
            "name": "entities",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entities"
            }
          },
          {
            "name": "locations",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Locations"
            }
          },
          {
            "name": "topics",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Topics"
            }
          },
          {
            "name": "classification_scores",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Classification Scores"
            }
          },
          {
            "name": "keyword_weights",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keyword Weights"
            }
          },
          {
            "name": "exclude_keywords",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exclude Keywords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/most_relevant_entities": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Get Most Relevant Entities",
        "operationId": "get_most_relevant_entities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MostRelevantEntitiesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/search_synthesizer": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Synthesizer",
        "operationId": "search_synthesizer",
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/articles/basic": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Articles",
        "operationId": "get_articles",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query for articles",
              "title": "Query"
            },
            "description": "Search query for articles"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of articles to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of articles to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "description": "Maximum number of articles to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of articles to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/articles/by_entity": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Articles By Entity",
        "operationId": "articles_by_entity",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Entity for articles",
              "title": "Entity"
            },
            "description": "Entity for articles"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Date for articles",
              "title": "Date"
            },
            "description": "Date for articles"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/articles/by_entity/": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Articles By Entity",
        "operationId": "articles_by_entity",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Entity for articles",
              "title": "Entity"
            },
            "description": "Entity for articles"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Date for articles",
              "title": "Date"
            },
            "description": "Date for articles"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/articles/by_id": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Article By Id",
        "description": "Fetch a single article by its content ID.",
        "operationId": "article_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Content ID of the article",
              "title": "Id"
            },
            "description": "Content ID of the article"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Articles-Article By Id"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Search Entities",
        "description": "Search and paginate through entities based on a query.",
        "operationId": "search_entities",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query for entities",
              "title": "Query"
            },
            "description": "Search query for entities"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/by_entity": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Entity Details",
        "description": "Retrieve detailed information about a specific entity.",
        "operationId": "get_entity_details",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Entity for details",
              "title": "Entity"
            },
            "description": "Entity for details"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/geo/geojson_events": {
      "get": {
        "tags": [
          "geo"
        ],
        "summary": "Geojson Events View",
        "operationId": "geojson_events_view",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Type"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "ISO formatted start date (e.g. 2023-01-01T00:00:00+00:00)",
              "title": "Start Date"
            },
            "description": "ISO formatted start date (e.g. 2023-01-01T00:00:00+00:00)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "ISO formatted end date (e.g. 2023-12-31T23:59:59+00:00)",
              "title": "End Date"
            },
            "description": "ISO formatted end date (e.g. 2023-12-31T23:59:59+00:00)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of locations to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of locations to return"
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/geo/geojson": {
      "get": {
        "tags": [
          "geo"
        ],
        "summary": "Geojson Raw View",
        "operationId": "geojson_raw_view",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "ISO formatted start date (e.g. 2023-01-01T00:00:00+00:00)",
              "title": "Start Date"
            },
            "description": "ISO formatted start date (e.g. 2023-01-01T00:00:00+00:00)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "ISO formatted end date (e.g. 2023-12-31T23:59:59+00:00)",
              "title": "End Date"
            },
            "description": "ISO formatted end date (e.g. 2023-12-31T23:59:59+00:00)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of locations to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of locations to return"
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/scores/by_entity": {
      "get": {
        "tags": [
          "scores"
        ],
        "summary": "Get Entity Scores In Timeframe",
        "operationId": "get_entity_scores_in_timeframe",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity"
            }
          },
          {
            "name": "timeframe_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "2000-01-01",
              "title": "Timeframe From"
            }
          },
          {
            "name": "timeframe_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "2025-06-08",
              "title": "Timeframe To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnotationCreate": {
        "properties": {
          "value": {
            "additionalProperties": true,
            "type": "object",
            "title": "Value"
          },
          "status": {
            "$ref": "#/components/schemas/ResultStatus",
            "default": "success"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "region": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "schema_id": {
            "type": "integer",
            "title": "Schema Id"
          },
          "run_id": {
            "type": "integer",
            "title": "Run Id"
          }
        },
        "type": "object",
        "required": [
          "value",
          "asset_id",
          "schema_id",
          "run_id"
        ],
        "title": "AnnotationCreate"
      },
      "AnnotationRead": {
        "properties": {
          "value": {
            "additionalProperties": true,
            "type": "object",
            "title": "Value"
          },
          "status": {
            "$ref": "#/components/schemas/ResultStatus",
            "default": "success"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "region": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "schema_id": {
            "type": "integer",
            "title": "Schema Id"
          },
          "run_id": {
            "type": "integer",
            "title": "Run Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "value",
          "id",
          "uuid",
          "asset_id",
          "schema_id",
          "run_id",
          "infospace_id",
          "user_id",
          "timestamp",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationRead"
      },
      "AnnotationRunCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "include_parent_context": {
            "type": "boolean",
            "title": "Include Parent Context",
            "default": false
          },
          "context_window": {
            "type": "integer",
            "title": "Context Window",
            "default": 0
          },
          "schema_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Schema Ids"
          },
          "target_asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Asset Ids"
          },
          "target_bundle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "schema_ids"
        ],
        "title": "AnnotationRunCreate"
      },
      "AnnotationRunRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "include_parent_context": {
            "type": "boolean",
            "title": "Include Parent Context",
            "default": false
          },
          "context_window": {
            "type": "integer",
            "title": "Context Window",
            "default": 0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/RunStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "status",
          "created_at",
          "updated_at",
          "started_at",
          "completed_at",
          "error_message"
        ],
        "title": "AnnotationRunRead"
      },
      "AnnotationRunUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          },
          "include_parent_context": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Parent Context"
          },
          "context_window": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window"
          }
        },
        "type": "object",
        "title": "AnnotationRunUpdate"
      },
      "AnnotationRunsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AnnotationRunRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AnnotationRunsOut"
      },
      "AnnotationSchemaCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_contract": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Contract"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "field_specific_justification_configs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FieldJustificationConfig"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Specific Justification Configs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "output_contract"
        ],
        "title": "AnnotationSchemaCreate"
      },
      "AnnotationSchemaRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_contract": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Contract"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "field_specific_justification_configs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FieldJustificationConfig"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Specific Justification Configs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "output_contract",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationSchemaRead"
      },
      "AnnotationSchemaUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_contract": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Contract"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "field_specific_justification_configs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FieldJustificationConfig"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Specific Justification Configs"
          }
        },
        "type": "object",
        "title": "AnnotationSchemaUpdate"
      },
      "AnnotationSchemasOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AnnotationSchemaRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AnnotationSchemasOut"
      },
      "AnnotationUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "region": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "title": "AnnotationUpdate"
      },
      "AnnotationsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AnnotationRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AnnotationsOut"
      },
      "ArticleResponse": {
        "properties": {
          "contents": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Contents"
          }
        },
        "type": "object",
        "required": [
          "contents"
        ],
        "title": "ArticleResponse"
      },
      "AssetCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "kind": {
            "$ref": "#/components/schemas/AssetKind"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "infospace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Infospace Id"
          },
          "parent_asset_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Asset Id"
          },
          "part_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Index"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "cells": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cells"
          },
          "source_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Identifier"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "AssetCreate"
      },
      "AssetKind": {
        "type": "string",
        "enum": [
          "pdf",
          "web",
          "image",
          "video",
          "audio",
          "text",
          "csv",
          "csv_row",
          "mbox",
          "email",
          "pdf_page",
          "text_chunk",
          "image_region",
          "video_scene",
          "audio_segment",
          "article",
          "file"
        ],
        "title": "AssetKind"
      },
      "AssetRead": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "kind": {
            "$ref": "#/components/schemas/AssetKind"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "parent_asset_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Asset Id"
          },
          "part_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Index"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "source_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Identifier"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "content_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Hash"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "processing_status": {
            "$ref": "#/components/schemas/ProcessingStatus",
            "default": "ready"
          },
          "processing_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Error"
          },
          "is_container": {
            "type": "boolean",
            "title": "Is Container",
            "description": "True if this asset can have child assets.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "title",
          "kind",
          "id",
          "uuid",
          "parent_asset_id",
          "part_index",
          "infospace_id",
          "source_id",
          "created_at",
          "updated_at",
          "is_container"
        ],
        "title": "AssetRead"
      },
      "AssetUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssetKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "source_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Identifier"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          }
        },
        "type": "object",
        "title": "AssetUpdate"
      },
      "AssetsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AssetRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AssetsOut"
      },
      "Body_assets-add_files_to_bundle_background": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "options": {
            "type": "string",
            "title": "Options",
            "default": "{}"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_assets-add_files_to_bundle_background"
      },
      "Body_assets-create_assets_background_bulk": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "options": {
            "type": "string",
            "title": "Options",
            "default": "{}"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_assets-create_assets_background_bulk"
      },
      "Body_assets-upload_file": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "process_immediately": {
            "type": "boolean",
            "title": "Process Immediately",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_assets-upload_file"
      },
      "Body_datasets-import_dataset": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Dataset Package file (.zip)"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_datasets-import_dataset"
      },
      "Body_filestorage-file_upload": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "File to upload"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_filestorage-file_upload"
      },
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login-login_access_token"
      },
      "Body_shareables-export_resource": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "integer",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "Body_shareables-export_resource"
      },
      "Body_shareables-import_resource": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_shareables-import_resource"
      },
      "Body_utils-extract_pdf_metadata": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_utils-extract_pdf_metadata"
      },
      "Body_utils-extract_pdf_text": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_utils-extract_pdf_text"
      },
      "BulkUrlIngestion": {
        "properties": {
          "urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Urls"
          },
          "base_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Title"
          },
          "scrape_immediately": {
            "type": "boolean",
            "title": "Scrape Immediately",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "BulkUrlIngestion"
      },
      "BundleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "asset_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Asset Ids",
            "default": []
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "bundle_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Metadata"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "BundleCreate"
      },
      "BundleRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "asset_count": {
            "type": "integer",
            "title": "Asset Count"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "bundle_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "infospace_id",
          "created_at",
          "asset_count",
          "uuid",
          "user_id",
          "updated_at"
        ],
        "title": "BundleRead"
      },
      "BundleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "bundle_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Metadata"
          }
        },
        "type": "object",
        "title": "BundleUpdate"
      },
      "CreatePackageFromRunRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreatePackageFromRunRequest"
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "asset_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Asset Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate"
      },
      "DatasetPackageEntitySummary": {
        "properties": {
          "entity_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Uuid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "DatasetPackageEntitySummary"
      },
      "DatasetPackageFileManifestItem": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "original_collection_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Collection Uuid"
          },
          "original_collection_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Collection Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "linked_asset_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linked Asset Uuid"
          }
        },
        "type": "object",
        "required": [
          "filename"
        ],
        "title": "DatasetPackageFileManifestItem"
      },
      "DatasetPackageSummary": {
        "properties": {
          "package_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Package Metadata"
          },
          "dataset_details": {
            "$ref": "#/components/schemas/DatasetPackageEntitySummary"
          },
          "record_count": {
            "type": "integer",
            "title": "Record Count",
            "default": 0
          },
          "annotation_results_count": {
            "type": "integer",
            "title": "Annotation Results Count",
            "default": 0
          },
          "included_schemas": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageEntitySummary"
            },
            "type": "array",
            "title": "Included Schemas",
            "default": []
          },
          "included_runs": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageEntitySummary"
            },
            "type": "array",
            "title": "Included Runs",
            "default": []
          },
          "linked_collections_summary": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageEntitySummary"
            },
            "type": "array",
            "title": "Linked Collections Summary",
            "default": []
          },
          "source_files_manifest": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageFileManifestItem"
            },
            "type": "array",
            "title": "Source Files Manifest",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "package_metadata",
          "dataset_details"
        ],
        "title": "DatasetPackageSummary"
      },
      "DatasetRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Ids"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "entity_uuid": {
            "type": "string",
            "title": "Entity Uuid"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "infospace_id",
          "created_at",
          "entity_uuid",
          "user_id",
          "updated_at"
        ],
        "title": "DatasetRead"
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Ids"
          }
        },
        "type": "object",
        "title": "DatasetUpdate"
      },
      "DatasetsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/DatasetRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "DatasetsOut"
      },
      "ExportBatchRequest": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Resource Ids"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_ids"
        ],
        "title": "ExportBatchRequest"
      },
      "FieldJustificationConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "custom_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Prompt"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "FieldJustificationConfig"
      },
      "FileUploadResponse": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original uploaded filename"
          },
          "object_name": {
            "type": "string",
            "title": "Object Name",
            "description": "Object name in storage"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "object_name"
        ],
        "title": "FileUploadResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InfospaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "vector_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vector Backend"
          },
          "embedding_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Model"
          },
          "embedding_dim": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Dim"
          },
          "chunk_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Size"
          },
          "chunk_overlap": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Overlap"
          },
          "chunk_strategy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Strategy"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "InfospaceCreate"
      },
      "InfospaceRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "owner_id",
          "created_at"
        ],
        "title": "InfospaceRead"
      },
      "InfospaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "vector_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vector Backend"
          },
          "embedding_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Model"
          },
          "embedding_dim": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Dim"
          },
          "chunk_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Size"
          },
          "chunk_overlap": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Overlap"
          },
          "chunk_strategy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Strategy"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          }
        },
        "type": "object",
        "title": "InfospaceUpdate"
      },
      "InfospacesOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/InfospaceRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "InfospacesOut"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "MostRelevantEntitiesRequest": {
        "properties": {
          "article_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Article Ids"
          }
        },
        "type": "object",
        "required": [
          "article_ids"
        ],
        "title": "MostRelevantEntitiesRequest"
      },
      "NewPassword": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "NewPassword"
      },
      "PackageRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "infospace_id",
          "created_at"
        ],
        "title": "PackageRead"
      },
      "Paginated": {
        "properties": {
          "data": {
            "items": {},
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "Paginated"
      },
      "PermissionLevel": {
        "type": "string",
        "enum": [
          "read_only",
          "edit",
          "full_access"
        ],
        "title": "PermissionLevel"
      },
      "ProcessingStatus": {
        "type": "string",
        "enum": [
          "ready",
          "pending",
          "processing",
          "failed"
        ],
        "title": "ProcessingStatus",
        "description": "Status for asset processing (creating child assets)."
      },
      "ProviderInfo": {
        "properties": {
          "provider_name": {
            "type": "string",
            "title": "Provider Name"
          },
          "models": {
            "items": {
              "$ref": "#/components/schemas/ProviderModel"
            },
            "type": "array",
            "title": "Models"
          }
        },
        "type": "object",
        "required": [
          "provider_name",
          "models"
        ],
        "title": "ProviderInfo"
      },
      "ProviderListResponse": {
        "properties": {
          "providers": {
            "items": {
              "$ref": "#/components/schemas/ProviderInfo"
            },
            "type": "array",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "providers"
        ],
        "title": "ProviderListResponse"
      },
      "ProviderModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProviderModel"
      },
      "QueryType": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "QueryType"
      },
      "ReprocessOptions": {
        "properties": {
          "delimiter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delimiter"
          },
          "encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoding",
            "default": "utf-8"
          },
          "skip_rows": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Rows",
            "default": 0
          },
          "max_rows": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Rows"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout",
            "default": 30
          }
        },
        "type": "object",
        "title": "ReprocessOptions"
      },
      "Request": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "query_type": {
            "$ref": "#/components/schemas/QueryType"
          }
        },
        "type": "object",
        "required": [
          "query",
          "query_type"
        ],
        "title": "Request",
        "description": "Request object for search synthesizer"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "bundle",
          "asset",
          "schema",
          "infospace",
          "run",
          "package"
        ],
        "title": "ResourceType"
      },
      "ResultStatus": {
        "type": "string",
        "enum": [
          "success",
          "failed"
        ],
        "title": "ResultStatus"
      },
      "RunStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed",
          "completed_with_errors"
        ],
        "title": "RunStatus"
      },
      "SearchHistoriesOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SearchHistoryRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "SearchHistoriesOut"
      },
      "SearchHistoryCreate": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "result_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Count"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchHistoryCreate"
      },
      "SearchHistoryRead": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "result_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Count"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "query",
          "id",
          "user_id",
          "timestamp"
        ],
        "title": "SearchHistoryRead"
      },
      "SearchType": {
        "type": "string",
        "enum": [
          "text",
          "semantic",
          "structured"
        ],
        "title": "SearchType"
      },
      "ShareableLinkCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "permission_level": {
            "$ref": "#/components/schemas/PermissionLevel",
            "default": "read_only"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "integer",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ShareableLinkCreate"
      },
      "ShareableLinkRead": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "permission_level": {
            "$ref": "#/components/schemas/PermissionLevel",
            "default": "read_only"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "token": {
            "type": "string",
            "title": "Token"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "integer",
            "title": "Resource Id"
          },
          "use_count": {
            "type": "integer",
            "title": "Use Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "infospace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Infospace Id"
          },
          "share_url": {
            "type": "string",
            "title": "Share Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "token",
          "user_id",
          "resource_type",
          "resource_id",
          "use_count",
          "created_at",
          "share_url"
        ],
        "title": "ShareableLinkRead"
      },
      "ShareableLinkStats": {
        "properties": {
          "total_links": {
            "type": "integer",
            "title": "Total Links"
          },
          "active_links": {
            "type": "integer",
            "title": "Active Links"
          },
          "expired_links": {
            "type": "integer",
            "title": "Expired Links"
          },
          "links_by_resource_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Links By Resource Type"
          },
          "most_shared_resources": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Most Shared Resources"
          },
          "most_used_links": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Most Used Links"
          }
        },
        "type": "object",
        "required": [
          "total_links",
          "active_links",
          "expired_links",
          "links_by_resource_type",
          "most_shared_resources",
          "most_used_links"
        ],
        "title": "ShareableLinkStats"
      },
      "ShareableLinkUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "permission_level": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PermissionLevel"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          }
        },
        "type": "object",
        "title": "ShareableLinkUpdate"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "Token"
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UpdatePassword"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "tier": {
            "$ref": "#/components/schemas/UserTier",
            "default": "tier_0"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserCreateOpen": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreateOpen"
      },
      "UserOut": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "tier": {
            "$ref": "#/components/schemas/UserTier",
            "default": "tier_0"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "email",
          "id"
        ],
        "title": "UserOut"
      },
      "UserTier": {
        "type": "string",
        "enum": [
          "tier_0",
          "free",
          "pro",
          "tier_1",
          "enterprise"
        ],
        "title": "UserTier"
      },
      "UserUpdate": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserTier"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "UserUpdateMe"
      },
      "UsersOut": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "tier": {
            "$ref": "#/components/schemas/UserTier",
            "default": "tier_0"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserOut"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "email",
          "data",
          "count"
        ],
        "title": "UsersOut"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}
