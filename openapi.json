{
  "openapi": "3.1.0",
  "info": {
    "title": "Open Politics Project",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/admin/registration/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Registration Stats",
        "description": "Get registration statistics and status.\nAdmin only.",
        "operationId": "get_registration_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/{asset_id}/fragments": {
      "post": {
        "tags": [
          "Analysis Service",
          "Analysis Service"
        ],
        "summary": "Promote Fragment",
        "description": "Promote a fragment of information to a permanent feature of an asset.\nThis creates an auditable annotation and adds the fragment to the asset's metadata.",
        "operationId": "promote_fragment",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoteFragmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analysis/adapters": {
      "get": {
        "tags": [
          "Analysis Service",
          "Analysis Adapters"
        ],
        "summary": "List Analysis Adapters",
        "description": "List all active and available analysis adapters.",
        "operationId": "list_analysis_adapters",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AnalysisAdapterRead"
                  },
                  "type": "array",
                  "title": "Response Analysis Service-List Analysis Adapters"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analysis/adapters/{adapter_name}/execute": {
      "post": {
        "tags": [
          "Analysis Service",
          "Analysis Adapters"
        ],
        "summary": "Execute Analysis Adapter",
        "operationId": "execute_analysis_adapter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "adapter_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The registered name of the adapter",
              "title": "Adapter Name"
            },
            "description": "The registered name of the adapter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Analysis Service-Execute Analysis Adapter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Run",
        "description": "Create a new Run.",
        "operationId": "create_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "List Runs",
        "description": "Retrieve Runs for the infospace.",
        "operationId": "list_runs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Run",
        "description": "Create a new Run.",
        "operationId": "create_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "List Runs",
        "description": "Retrieve Runs for the infospace.",
        "operationId": "list_runs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}": {
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Get Run",
        "description": "Retrieve a specific Run by its ID.",
        "operationId": "get_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Update Run",
        "description": "Update a Run.",
        "operationId": "update_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Delete Run",
        "description": "Delete a Run.",
        "operationId": "delete_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}/retry_failures": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Retry Failed Annotations",
        "description": "Retry failed annotations in a run.",
        "operationId": "retry_failed_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}/create_package": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Package From Run Endpoint",
        "description": "Create a package from a run.",
        "operationId": "create_package_from_run_endpoint",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePackageFromRunRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/annotation_schemas/": {
      "post": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Create Annotation Schema",
        "description": "Create a new Annotation Schema.",
        "operationId": "create_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "List Annotation Schemas",
        "description": "Retrieve Annotation Schemas for the infospace.",
        "operationId": "list_annotation_schemas",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include archived (inactive) schemas",
              "default": false,
              "title": "Include Archived"
            },
            "description": "Include archived (inactive) schemas"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/annotation_schemas": {
      "post": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Create Annotation Schema",
        "description": "Create a new Annotation Schema.",
        "operationId": "create_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "List Annotation Schemas",
        "description": "Retrieve Annotation Schemas for the infospace.",
        "operationId": "list_annotation_schemas",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include archived (inactive) schemas",
              "default": false,
              "title": "Include Archived"
            },
            "description": "Include archived (inactive) schemas"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/annotation_schemas/{schema_id}": {
      "get": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Get Annotation Schema",
        "description": "Retrieve a specific Annotation Schema by its ID.",
        "operationId": "get_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Update Annotation Schema",
        "description": "Update an Annotation Schema.",
        "operationId": "update_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Delete Annotation Schema",
        "description": "Archive an annotation schema by setting it to inactive (soft delete).\nThis is a non-destructive operation.",
        "operationId": "delete_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/annotation_schemas/{schema_id}/restore": {
      "post": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Restore Annotation Schema",
        "description": "Restores an archived (soft-deleted) annotation schema.",
        "operationId": "restore_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Annotation",
        "description": "Create a new annotation.",
        "operationId": "create_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "List Annotations",
        "description": "Retrieve Annotations for the infospace.",
        "operationId": "list_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Annotation",
        "description": "Create a new annotation.",
        "operationId": "create_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "List Annotations",
        "description": "Retrieve Annotations for the infospace.",
        "operationId": "list_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/{annotation_id}": {
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Get Annotation",
        "description": "Retrieve a specific Annotation by its ID.",
        "operationId": "get_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Update Annotation",
        "description": "Update an Annotation.",
        "operationId": "update_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Delete Annotation",
        "description": "Delete an Annotation.",
        "operationId": "delete_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/batch": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Batch Annotations",
        "description": "Create multiple annotations in a batch.",
        "operationId": "create_batch_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnnotationCreate"
                },
                "title": "Annotations"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/run/{run_id}/results": {
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Get Run Results",
        "description": "Retrieve all annotations for a specific AnnotationRun.\nThe service handles run ownership and infospace context verification.",
        "operationId": "get_run_results",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationRead"
                  },
                  "title": "Response Annotations-Get Run Results"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/infospaces/{infospace_id}/annotations/{annotation_id}/retry": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Retry Single Annotation",
        "description": "Retries a single failed annotation synchronously.",
        "operationId": "retry_single_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRetryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Asset",
        "description": "Generic asset creation endpoint that routes to appropriate specific endpoint.\n\nThis endpoint maintains backward compatibility while using the new ContentService.\nBased on the asset data provided, it routes to the appropriate ingestion method:\n- If source_identifier (URL) is provided: ingest as web content\n- If text_content is provided: ingest as text\n- Otherwise: create a basic asset record",
        "operationId": "create_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "List Assets",
        "description": "Retrieve assets for an infospace.",
        "operationId": "list_assets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "parent_asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Asset",
        "description": "Generic asset creation endpoint that routes to appropriate specific endpoint.\n\nThis endpoint maintains backward compatibility while using the new ContentService.\nBased on the asset data provided, it routes to the appropriate ingestion method:\n- If source_identifier (URL) is provided: ingest as web content\n- If text_content is provided: ingest as text\n- Otherwise: create a basic asset record",
        "operationId": "create_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "List Assets",
        "description": "Retrieve assets for an infospace.",
        "operationId": "list_assets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "parent_asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/upload": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Upload File",
        "description": "Upload a file and create an asset.",
        "operationId": "upload_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-upload_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/ingest-url": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Url",
        "description": "Ingest content from a URL.",
        "operationId": "ingest_url",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "scrape_immediately",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Scrape Immediately"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/ingest-text": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Text",
        "description": "Ingest direct text content.",
        "operationId": "ingest_text",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "text_content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Content"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "event_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Timestamp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/compose-article": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Compose Article",
        "description": "Compose a free-form article with embedded assets and bundle references.",
        "operationId": "compose_article",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleComposition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/bulk-ingest-urls": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Bulk Ingest Urls",
        "description": "Ingest multiple URLs as separate assets.",
        "operationId": "bulk_ingest_urls",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUrlIngestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Bulk Ingest Urls"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/{asset_id}/reprocess": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Reprocess Asset",
        "description": "Reprocess an asset with new options.",
        "operationId": "reprocess_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReprocessOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/discover-rss-feeds": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Discover Rss Feeds",
        "description": "Discover RSS feeds from the awesome-rss-feeds repository.\n\nArgs:\n    country: Country name (e.g., \"Australia\", \"United States\") - if None, returns all countries\n    category: Category filter (e.g., \"News\", \"Technology\") - if None, returns all categories\n    limit: Maximum number of feeds to return",
        "operationId": "discover_rss_feeds",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assets-Discover Rss Feeds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/preview-rss-feed": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Preview Rss Feed",
        "description": "Preview the content of an RSS feed.",
        "operationId": "preview_rss_feed",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "feed_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Url"
            }
          },
          {
            "name": "max_items",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Max Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assets-Preview Rss Feed"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/create-rss-source": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Rss Source",
        "description": "Create a new Source of kind 'rss' and optionally set up a monitor for it.",
        "operationId": "create_rss_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RssSourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/ingest-selected-articles": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Selected Articles",
        "description": "Ingest selected articles from an RSS feed preview.\n\nArgs:\n    feed_url: URL of the RSS feed\n    selected_articles: List of article objects with at least 'link' and 'title'\n    bundle_id: Optional bundle to add articles to",
        "operationId": "ingest_selected_articles",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "feed_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Url"
            }
          },
          {
            "name": "bundle_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                },
                "title": "Selected Articles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assets-Ingest Selected Articles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/{asset_id}": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Asset",
        "description": "Get a specific asset.",
        "operationId": "get_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Update Asset",
        "description": "Update an asset.",
        "operationId": "update_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Delete Asset",
        "description": "Delete an asset and its children.",
        "operationId": "delete_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/{asset_id}/children": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Asset Children",
        "description": "Get child assets of a specific asset.",
        "operationId": "get_asset_children",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Get Asset Children"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/supported-types": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Supported Content Types",
        "description": "Get list of supported content types.",
        "operationId": "get_supported_content_types",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Assets-Get Supported Content Types"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/bulk-upload-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Assets Background Bulk",
        "description": "Upload multiple files as individual assets using background processing.\nReturns task IDs for progress tracking.",
        "operationId": "create_assets_background_bulk",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-create_assets_background_bulk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Create Assets Background Bulk"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/bulk-urls-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Assets Background Urls",
        "description": "Ingest multiple URLs using background processing.\nReturns task ID for progress tracking.",
        "operationId": "create_assets_background_urls",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUrlIngestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Create Assets Background Urls"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/bundles/{bundle_id}/add-files-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Add Files To Bundle Background",
        "description": "Add files to existing bundle using background processing.",
        "operationId": "add_files_to_bundle_background",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-add_files_to_bundle_background"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Add Files To Bundle Background"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/tasks/{task_id}/status": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Task Status",
        "description": "Get the status of a background task.",
        "operationId": "get_task_status",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Get Task Status"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/assets/ingest-rss-feeds-from-awesome": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Rss Feeds From Awesome",
        "description": "Discover and ingest RSS feeds from the awesome-rss-feeds repository.\n\nThis endpoint will:\n1. Fetch RSS feeds from the specified country\n2. Optionally filter by category\n3. Ingest the feeds and their content\n4. Optionally add to a bundle",
        "operationId": "ingest_rss_feeds_from_awesome",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RSSDiscoveryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Ingest Rss Feeds From Awesome"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/backups": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Create Backup",
        "description": "Create a new backup of an infospace.",
        "operationId": "create_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceBackupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "List Backups",
        "description": "List backups for an infospace.",
        "operationId": "list_backups",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "List All User Backups",
        "description": "List all backups for a user across all infospaces.",
        "operationId": "list_all_user_backups",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/{backup_id}": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Get Backup",
        "description": "Get a specific backup by ID.",
        "operationId": "get_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Update Backup",
        "description": "Update backup metadata.",
        "operationId": "update_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceBackupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Delete Backup",
        "description": "Delete a backup and its associated file.",
        "operationId": "delete_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/{backup_id}/restore": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Restore Backup",
        "description": "Restore an infospace from a backup.",
        "operationId": "restore_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRestoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/{backup_id}/share": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Create Backup Share Link",
        "description": "Create a shareable link for a backup.",
        "operationId": "create_backup_share_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupShareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Backups-Create Backup Share Link"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/download/{share_token}": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Download Shared Backup",
        "description": "Download a backup using a share token.",
        "operationId": "download_shared_backup",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Backups-Download Shared Backup"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/cleanup": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Cleanup Expired Backups",
        "description": "Manually trigger cleanup of expired backups (admin function).",
        "operationId": "cleanup_expired_backups",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/backups/admin/infospaces-overview": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Get Infospaces Backup Overview",
        "description": "Admin endpoint: Get overview of all infospaces with backup status.",
        "operationId": "get_infospaces_backup_overview",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search infospace names or user emails",
              "title": "Search"
            },
            "description": "Search infospace names or user emails"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific user ID",
              "title": "User Id"
            },
            "description": "Filter by specific user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Backups-Get Infospaces Backup Overview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/admin/backup-all": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Trigger Backup All Infospaces",
        "description": "Admin endpoint: Trigger backup creation for all infospaces.",
        "operationId": "trigger_backup_all_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "manual",
              "title": "Backup Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backups/admin/backup-specific": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Trigger Backup Specific Infospaces",
        "description": "Admin endpoint: Trigger backup creation for specific infospaces.",
        "operationId": "trigger_backup_specific_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "manual",
              "title": "Backup Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "Infospace Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/infospaces/{infospace_id}/bundles": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Create Bundle",
        "description": "Create a new bundle in an infospace.",
        "operationId": "create_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Bundles",
        "description": "Get bundles for an infospace.",
        "operationId": "get_bundles",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BundleRead"
                  },
                  "title": "Response Bundles-Get Bundles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Bundle",
        "description": "Get a bundle by ID.",
        "operationId": "get_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bundles"
        ],
        "summary": "Update Bundle",
        "description": "Update a bundle.",
        "operationId": "update_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "summary": "Delete Bundle",
        "description": "Delete a bundle.",
        "operationId": "delete_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}/assets/{asset_id}": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Add Asset To Bundle",
        "description": "Add an existing asset to a bundle by ID.",
        "operationId": "add_asset_to_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "summary": "Remove Asset From Bundle",
        "description": "Remove an asset from a bundle by ID.",
        "operationId": "remove_asset_from_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/infospaces/{infospace_id}/bundles/{bundle_id}/assets": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Assets In Bundle",
        "description": "Get all assets within a specific bundle.",
        "operationId": "get_assets_in_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Bundles-Get Assets In Bundle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/assets/{asset_id}": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Asset",
        "description": "Get an asset by ID.",
        "operationId": "get_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bundles/bundles/{bundle_id}/transfer": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Transfer Bundle",
        "description": "Transfer a bundle to another infospace.",
        "operationId": "transfer_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "target_infospace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Infospace Id"
            }
          },
          {
            "name": "copy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Copy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/chat": {
      "post": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "Intelligence Chat",
        "description": "Intelligence analysis chat with tool orchestration.\n\nThe AI model can search, analyze, and interact with your intelligence data.\nExample conversation:\n- User: \"What are the main themes in recent political documents?\"\n- AI: *calls search_assets tool* → *analyzes results* → Responds with findings",
        "operationId": "intelligence_chat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/chat/tools/execute": {
      "post": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "Execute Tool Call",
        "description": "Execute a tool call made by an AI model.\n\nThis endpoint is used when the AI model wants to interact with the intelligence platform\nthrough function calls (search assets, get annotations, etc.).",
        "operationId": "execute_tool_call",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/chat/models": {
      "get": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "List Available Models",
        "description": "Discover available language models across all providers.\n\nQuery parameters:\n- capability: Filter by capability ('tools', 'streaming', 'thinking', 'multimodal', etc.)\n\nReturns all available models from OpenAI, Ollama, Gemini, etc.",
        "operationId": "list_available_models",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "capability",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Capability"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/tools": {
      "get": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "List Universal Tools",
        "description": "List universal intelligence analysis tool definitions.\n\nThese are the capabilities available to AI models.\nFastMCP automatically generates schemas from function signatures.",
        "operationId": "list_universal_tools",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/tools/context/{infospace_id}": {
      "get": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "Get Infospace Tool Context",
        "description": "Get infospace-specific context for tools (what's actually available).\n\nThis provides real data about available asset types, schemas, bundles, etc.\nto help AI models make better tool usage decisions.",
        "operationId": "get_infospace_tool_context",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chunking/assets/{asset_id}/chunk": {
      "post": {
        "tags": [
          "chunking"
        ],
        "summary": "Chunk Single Asset",
        "description": "Chunk a single asset into text chunks.",
        "operationId": "chunk_single_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkAssetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkingResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chunking/assets/chunk-batch": {
      "post": {
        "tags": [
          "chunking"
        ],
        "summary": "Chunk Multiple Assets",
        "description": "Chunk multiple assets based on filters.",
        "operationId": "chunk_multiple_assets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkAssetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Chunking-Chunk Multiple Assets"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/chunking/assets/{asset_id}/chunks": {
      "get": {
        "tags": [
          "chunking"
        ],
        "summary": "Get Asset Chunks",
        "description": "Get all chunks for a specific asset.",
        "operationId": "get_asset_chunks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetChunkRead"
                  },
                  "title": "Response Chunking-Get Asset Chunks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "chunking"
        ],
        "summary": "Remove Asset Chunks",
        "description": "Remove all chunks for an asset.",
        "operationId": "remove_asset_chunks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chunking/stats": {
      "get": {
        "tags": [
          "chunking"
        ],
        "summary": "Get Chunking Statistics",
        "description": "Get chunking statistics.",
        "operationId": "get_chunking_statistics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific asset",
              "title": "Asset Id"
            },
            "description": "Filter by specific asset"
          },
          {
            "name": "infospace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by infospace",
              "title": "Infospace Id"
            },
            "description": "Filter by infospace"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkingStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset within a specific infospace.",
        "operationId": "create_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "List Datasets",
        "description": "Retrieve datasets within a specific infospace.",
        "operationId": "list_datasets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset within a specific infospace.",
        "operationId": "create_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "List Datasets",
        "description": "Retrieve datasets within a specific infospace.",
        "operationId": "list_datasets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Get Dataset",
        "description": "Get a specific dataset by ID.",
        "operationId": "get_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "Update a dataset.",
        "operationId": "update_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "Delete a dataset.",
        "operationId": "delete_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/{dataset_id}/export": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Export Dataset",
        "description": "Export a specific dataset as a self-contained package (ZIP).",
        "operationId": "export_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include full text content of data records",
              "default": false,
              "title": "Include Content"
            },
            "description": "Include full text content of data records"
          },
          {
            "name": "include_results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include associated classification results",
              "default": false,
              "title": "Include Results"
            },
            "description": "Include associated classification results"
          },
          {
            "name": "include_source_files",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include original source files (PDFs, CSVs, etc.)",
              "default": true,
              "title": "Include Source Files"
            },
            "description": "Include original source files (PDFs, CSVs, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/import": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Import Dataset",
        "description": "Import a dataset from an exported Dataset Package file.",
        "operationId": "import_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "conflict_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "How to handle conflicts",
              "default": "skip",
              "title": "Conflict Strategy"
            },
            "description": "How to handle conflicts"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_datasets-import_dataset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/datasets/import_from_token": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Import Dataset From Token",
        "description": "Import a dataset into the target infospace using a share token.\nThis internally performs an export from the source and then an import.",
        "operationId": "import_dataset_from_token",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "share_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Share token for the dataset",
              "title": "Share Token"
            },
            "description": "Share token for the dataset"
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include full text content if available",
              "default": false,
              "title": "Include Content"
            },
            "description": "Include full text content if available"
          },
          {
            "name": "include_results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include classification results if available",
              "default": false,
              "title": "Include Results"
            },
            "description": "Include classification results if available"
          },
          {
            "name": "conflict_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "How to handle conflicts",
              "default": "skip",
              "title": "Conflict Strategy"
            },
            "description": "How to handle conflicts"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embeddings/models": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "List Embedding Models",
        "description": "List all available embedding models.",
        "operationId": "list_embedding_models",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only return active models",
              "default": true,
              "title": "Active Only"
            },
            "description": "Only return active models"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmbeddingModelRead"
                  },
                  "title": "Response Embeddings-List Embedding Models"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Create Embedding Model",
        "description": "Create a new embedding model.",
        "operationId": "create_embedding_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingModelRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embeddings/models/available": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "Get Available Models",
        "description": "Get available models from the current embedding provider.",
        "operationId": "get_available_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/embeddings/health": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "Check Embedding Provider Health",
        "description": "Check the health of the embedding provider.",
        "operationId": "check_embedding_provider_health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/embeddings/models/{model_id}/stats": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "Get Embedding Model Stats",
        "description": "Get statistics for an embedding model.",
        "operationId": "get_embedding_model_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embeddings/generate": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Generate Embeddings",
        "description": "Generate embeddings for a list of asset chunks.",
        "operationId": "generate_embeddings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/embeddings/search": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Similarity Search",
        "description": "Perform similarity search using embeddings.",
        "operationId": "similarity_search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/embeddings/embed-text": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Embed Text",
        "description": "Generate embedding for a single text (utility endpoint).",
        "operationId": "embed_text",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EmbeddingProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embeddings/test": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Test Embedding Provider",
        "description": "Test the embedding provider with a sample text.",
        "operationId": "test_embedding_provider",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_text",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "This is a test sentence for embedding generation.",
              "title": "Test Text"
            }
          },
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embeddings/models/{model_id}": {
      "delete": {
        "tags": [
          "embeddings"
        ],
        "summary": "Deactivate Embedding Model",
        "description": "Deactivate an embedding model (soft delete).",
        "operationId": "deactivate_embedding_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "File Upload",
        "description": "Upload a file to the configured storage provider.\nExpects form-data with a file.\nGenerates a unique object name based on user ID and filename.",
        "operationId": "file_upload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_filestorage-file_upload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/download": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "File Download",
        "description": "Download a file from the storage provider.\nExpects query parameter 'file_path' (the object name).\nThe file is saved temporarily and a background task deletes the temp file.",
        "operationId": "file_download",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/list": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "List Files",
        "description": "List files in the storage provider with user authorization.\nUsers can only list files in their own directory.",
        "operationId": "list_files",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            }
          },
          {
            "name": "max_keys",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Max Keys"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/delete": {
      "delete": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "Delete File",
        "description": "Delete a file with proper authorization checks.\nUsers can only delete files in their own directory.",
        "operationId": "delete_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "object_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/stream/{file_path}": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "Stream File",
        "description": "Stream a file directly from storage without creating temporary files.\nThis is more efficient for media files (images, videos, PDFs) that need to be displayed in browsers.",
        "operationId": "stream_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/filters/filters": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Save Filter",
        "description": "Save a reusable filter definition.",
        "operationId": "save_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filter Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Filter Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "List Filters",
        "description": "List all saved filter names.",
        "operationId": "list_filters",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Filters-List Filters"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/filters/filters/{filter_name}": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Filter",
        "description": "Get a saved filter definition.",
        "operationId": "get_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filter Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Get Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "filters"
        ],
        "summary": "Delete Filter",
        "description": "Delete a saved filter.",
        "operationId": "delete_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filter Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/filters/filters/test": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Test Filter",
        "description": "Test a filter against sample data.",
        "operationId": "test_filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_filters-test_filter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Filters-Test Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/filters/filters/examples/basic": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Basic Filter Examples",
        "description": "Get examples of basic filter configurations.",
        "operationId": "get_basic_filter_examples",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Filters-Get Basic Filter Examples"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/filters/filters/examples/advanced": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Advanced Filter Examples",
        "description": "Get examples of advanced filter configurations with composition.",
        "operationId": "get_advanced_filter_examples",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Filters-Get Advanced Filter Examples"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/filters/filters/factory/threshold": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Create Threshold Filter",
        "description": "Create a threshold filter using the factory.",
        "operationId": "create_threshold_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Field"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Threshold"
            }
          },
          {
            "name": "operator",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ">=",
              "title": "Operator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Create Threshold Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/filters/filters/factory/range": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Create Range Filter",
        "description": "Create a range filter using the factory.",
        "operationId": "create_range_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Field"
            }
          },
          {
            "name": "min_value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Min Value"
            }
          },
          {
            "name": "max_value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Max Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Create Range Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/filters/filters/factory/keywords": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Create Keyword Filter",
        "description": "Create a keyword filter using the factory.",
        "operationId": "create_keyword_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Field"
            }
          },
          {
            "name": "match_any",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Match Any"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Keywords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Create Keyword Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/healthz/readiness": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Readyz",
        "operationId": "readyz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/healthz/liveness": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Liveness",
        "operationId": "liveness",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/healthz/healthz": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Healthz",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/": {
      "post": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Create Infospace",
        "description": "Create a new Infospace.",
        "operationId": "create_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "List Infospaces",
        "description": "Retrieve Infospaces for the current user.",
        "operationId": "list_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospacesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces": {
      "post": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Create Infospace",
        "description": "Create a new Infospace.",
        "operationId": "create_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "List Infospaces",
        "description": "Retrieve Infospaces for the current user.",
        "operationId": "list_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospacesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/{infospace_id}": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Get Infospace",
        "description": "Retrieve a specific Infospace by its ID.",
        "operationId": "get_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Update Infospace",
        "description": "Update an Infospace.",
        "operationId": "update_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Delete Infospace",
        "description": "Delete an Infospace.",
        "operationId": "delete_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/{infospace_id}/stats": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Get Infospace Stats",
        "description": "Get statistics about an Infospace.",
        "operationId": "get_infospace_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Infospaces-Get Infospace Stats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/infospaces/import": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Import Infospace",
        "description": "Import an Infospace.",
        "operationId": "import_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery-html-content/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "recover_password_html_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/monitors": {
      "post": {
        "tags": [
          "Monitors"
        ],
        "summary": "Create Monitor",
        "description": "Create a new monitor in an infospace.",
        "operationId": "create_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Monitors"
        ],
        "summary": "List Monitors",
        "description": "List all monitors in an infospace.",
        "operationId": "list_monitors",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MonitorRead"
                  },
                  "title": "Response Monitors-List Monitors"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monitors/{monitor_id}": {
      "get": {
        "tags": [
          "Monitors"
        ],
        "summary": "Get Monitor",
        "description": "Get a specific monitor by ID.",
        "operationId": "get_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Monitors"
        ],
        "summary": "Update Monitor",
        "description": "Update a monitor.",
        "operationId": "update_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Monitors"
        ],
        "summary": "Delete Monitor",
        "description": "Delete a monitor.",
        "operationId": "delete_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monitors/{monitor_id}/execute": {
      "post": {
        "tags": [
          "Monitors"
        ],
        "summary": "Execute Monitor Manually",
        "description": "Manually trigger a monitor to check for new assets and create a run.",
        "operationId": "execute_monitor_manually",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pipelines/infospaces/{infospace_id}/pipelines": {
      "post": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Create Pipeline",
        "description": "Create a new Intelligence Pipeline.",
        "operationId": "create_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntelligencePipelineCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligencePipelineRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pipelines"
        ],
        "summary": "List Pipelines",
        "description": "List all Intelligence Pipelines in an infospace.",
        "operationId": "list_pipelines",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntelligencePipelineRead"
                  },
                  "title": "Response Pipelines-List Pipelines"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pipelines/{pipeline_id}": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Get Pipeline",
        "description": "Get a specific Intelligence Pipeline by ID.",
        "operationId": "get_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligencePipelineRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Update Pipeline",
        "description": "Update an Intelligence Pipeline.",
        "operationId": "update_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntelligencePipelineUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligencePipelineRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Delete Pipeline",
        "description": "Delete an Intelligence Pipeline.",
        "operationId": "delete_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pipelines/{pipeline_id}/execute": {
      "post": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Execute Pipeline",
        "description": "Manually trigger an Intelligence Pipeline for a specific set of assets.",
        "operationId": "execute_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "Asset Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineExecutionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search-ext/": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Content",
        "description": "Performs a search using the configured search provider (e.g., Tavily)\nand returns a standardized list of search results.",
        "operationId": "search_content",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "description": "The search query.",
              "title": "Query"
            },
            "description": "The search query."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of results to return.",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of results to return."
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search-ext": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Content",
        "description": "Performs a search using the configured search provider (e.g., Tavily)\nand returns a standardized list of search results.",
        "operationId": "search_content",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "description": "The search query.",
              "title": "Query"
            },
            "description": "The search query."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of results to return.",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of results to return."
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search_histories/create": {
      "post": {
        "tags": [
          "search-history"
        ],
        "summary": "Create Search History",
        "description": "Create a new search history entry.",
        "operationId": "create_search_history",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchHistoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search_histories/read": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Read Search Histories",
        "description": "Retrieve search histories for the current user.",
        "operationId": "read_search_histories",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/{infospace_id}/links": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Create Shareable Link",
        "description": "Create a new shareable link for a resource within an infospace.",
        "operationId": "create_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareableLinkCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Get Shareable Links",
        "description": "Get shareable links for the current user, optionally filtered by resource and infospace.",
        "operationId": "get_shareable_links",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ResourceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/links/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Get Shareable Link By Token",
        "description": "Get a shareable link by token.",
        "operationId": "get_shareable_link_by_token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/links/{link_id}": {
      "put": {
        "tags": [
          "sharing"
        ],
        "summary": "Update Shareable Link",
        "description": "Update a shareable link by its ID (owner only).",
        "operationId": "update_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Link Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareableLinkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sharing"
        ],
        "summary": "Delete Shareable Link",
        "description": "Delete a shareable link by its ID (owner only).",
        "operationId": "delete_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Link Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/access/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Access Shared Resource",
        "description": "Access the resource associated with a shareable link token.",
        "operationId": "access_shared_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Sharing-Access Shared Resource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/view/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "View Shared Resource",
        "description": "Provides a read-only, public view of a shared resource (Asset or Bundle).\nThis endpoint is unauthenticated and relies on the link's validity.",
        "operationId": "view_shared_resource",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedResourcePreview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/{infospace_id}/stats": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Get Sharing Stats",
        "description": "Get sharing statistics for the current user within a specific infospace.",
        "operationId": "get_sharing_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/{infospace_id}/export": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Export Resource",
        "description": "Export a resource from a specific infospace to a file.\nReturns a file download.",
        "operationId": "export_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_sharing-export_resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/import/{target_infospace_id}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Import Resource",
        "description": "Import a resource from a file into a specific infospace.",
        "operationId": "import_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_sharing-import_resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/export-batch/{infospace_id}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Export Resources Batch",
        "description": "Export multiple resources of the same type to a ZIP archive.",
        "operationId": "export_resources_batch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful batch export, returns a ZIP archive.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., no resource IDs)"
          },
          "403": {
            "description": "Forbidden (e.g., permission denied for one or more resources)"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/sharing/export-mixed-batch/{infospace_id}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Export Mixed Batch",
        "description": "Export a mix of assets and bundles to a single ZIP archive.",
        "operationId": "export_mixed_batch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMixedBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/stream/{token}/{asset_id}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Stream Shared Asset File",
        "description": "Stream the file blob associated with a publicly shared asset.\nAccess is validated via the share token.",
        "operationId": "stream_shared_asset_file",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/download-bundle/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Download Shared Bundle",
        "description": "Download all assets within a publicly shared bundle as a ZIP archive.\nAccess is validated via the share token.",
        "operationId": "download_shared_bundle",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/download/{token}/{asset_id}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Download Shared Asset File",
        "description": "Download the file blob associated with a publicly shared asset.\nAccess is validated via the share token.",
        "operationId": "download_shared_asset_file",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/view_dataset_package_summary/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "View Dataset Package Summary",
        "description": "Get a summary of a shared dataset package using its token.\nDoes not trigger a full download or import of the package data.",
        "operationId": "view_dataset_package_summary",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetPackageSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sharing/import-from-token/{token}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Import Resource From Token",
        "description": "Import a shared resource into the current user's specified infospace.",
        "operationId": "import_resource_from_token",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFromTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/sources/": {
      "post": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Create Source",
        "description": "Create a new source. If monitoring is enabled, a corresponding ingestion task\nand a destination bundle will also be created.",
        "operationId": "create_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "List Sources",
        "description": "Retrieve Sources for the infospace.",
        "operationId": "list_sources",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/sources": {
      "post": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Create Source",
        "description": "Create a new source. If monitoring is enabled, a corresponding ingestion task\nand a destination bundle will also be created.",
        "operationId": "create_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "List Sources",
        "description": "Retrieve Sources for the infospace.",
        "operationId": "list_sources",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/sources/{source_id}": {
      "get": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Get Source",
        "description": "Retrieve a specific Source by its ID.",
        "operationId": "get_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Update Source",
        "description": "Update a Source.",
        "operationId": "update_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Delete Source",
        "description": "Delete a Source.",
        "operationId": "delete_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/infospaces/{infospace_id}/sources/transfer": {
      "post": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Transfer Sources",
        "description": "Transfer sources between infospaces.",
        "operationId": "transfer_sources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTransferResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/sso/discourse/login": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Initiate Discourse Login",
        "description": "Convenience endpoint to redirect users to Discourse login.\nWhen they click \"Log In\" on Discourse, Discourse will automatically\nredirect back to our /callback endpoint to handle SSO.",
        "operationId": "initiate_discourse_login",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/discourse/callback": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Handle Discourse Sso",
        "description": "Handle SSO callback from Discourse.\nSince this is a server-to-server redirect, we can't rely on JWT tokens.\nInstead, redirect to a frontend page that can handle the authentication.",
        "operationId": "handle_discourse_sso",
        "parameters": [
          {
            "name": "sso",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SSO payload from Discourse",
              "title": "Sso"
            },
            "description": "SSO payload from Discourse"
          },
          {
            "name": "sig",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Signature from Discourse",
              "title": "Sig"
            },
            "description": "Signature from Discourse"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/discourse/logout": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Handle Discourse Logout",
        "description": "Handle logout from Discourse.\nThis is called when a user logs out from Discourse to also log them out of your app.",
        "operationId": "handle_discourse_logout",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/sso/discourse/info": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Get Discourse Sso Info",
        "description": "Get information about Discourse SSO configuration.\nUseful for debugging and setup verification.",
        "operationId": "get_discourse_sso_info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Sso-Get Discourse Sso Info"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/discourse/user-sync": {
      "post": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Sync User To Discourse",
        "description": "Manually sync a user to Discourse.\nThis can be useful for testing or forcing a user sync.",
        "operationId": "sync_user_to_discourse",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/discourse/complete": {
      "post": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Complete Discourse Sso",
        "description": "Complete the SSO process with an authenticated user.\nReturns the redirect URL as JSON to avoid CORS issues with manual redirects.",
        "operationId": "complete_discourse_sso",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_sso-complete_discourse_sso"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Sso-Complete Discourse Sso"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/tasks/infospaces/{infospace_id}/tasks/": {
      "post": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Create Task",
        "description": "Create a new Recurring Task in the specified infospace.",
        "operationId": "create_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "List Tasks",
        "description": "Retrieve Tasks for the infospace using the service.",
        "operationId": "list_tasks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task status",
              "title": "Status"
            },
            "description": "Filter by task status"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task type",
              "title": "Type"
            },
            "description": "Filter by task type"
          },
          {
            "name": "is_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by is_enabled flag",
              "title": "Is Enabled"
            },
            "description": "Filter by is_enabled flag"
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/infospaces/{infospace_id}/tasks": {
      "post": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Create Task",
        "description": "Create a new Recurring Task in the specified infospace.",
        "operationId": "create_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "List Tasks",
        "description": "Retrieve Tasks for the infospace using the service.",
        "operationId": "list_tasks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task status",
              "title": "Status"
            },
            "description": "Filter by task status"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task type",
              "title": "Type"
            },
            "description": "Filter by task type"
          },
          {
            "name": "is_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by is_enabled flag",
              "title": "Is Enabled"
            },
            "description": "Filter by is_enabled flag"
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/infospaces/{infospace_id}/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Get Task",
        "description": "Retrieve a specific Task by its ID from the infospace.",
        "operationId": "get_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Update Task",
        "description": "Update a Task in the infospace.",
        "operationId": "update_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Delete Task",
        "description": "Delete a Task from the infospace.",
        "operationId": "delete_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/infospaces/{infospace_id}/tasks/{task_id}/execute": {
      "post": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Execute Task Manually",
        "description": "Manually trigger the execution of a specific task.",
        "operationId": "execute_task_manually",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Tasks-Execute Task Manually"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Create User Backup",
        "description": "Create a new backup of a complete user account (Admin only).",
        "operationId": "create_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "List User Backups",
        "description": "List user backups (Admin only).",
        "operationId": "list_user_backups",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "target_user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific target user",
              "title": "Target User Id"
            },
            "description": "Filter by specific target user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/{backup_id}": {
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Get User Backup",
        "description": "Get a specific user backup (Admin only).",
        "operationId": "get_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Update User Backup",
        "description": "Update user backup metadata (Admin only).",
        "operationId": "update_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Delete User Backup",
        "description": "Delete a user backup and its files (Admin only).",
        "operationId": "delete_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/{backup_id}/restore": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Restore User Backup",
        "description": "Restore a user from a backup (Admin only).",
        "operationId": "restore_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupRestoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/{backup_id}/share": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Create User Backup Share Link",
        "description": "Create a shareable link for a user backup (Admin only).",
        "operationId": "create_user_backup_share_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupShareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response User Backups-Create User Backup Share Link"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/download/{share_token}": {
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Download Shared User Backup",
        "description": "Download a shared user backup.",
        "operationId": "download_shared_user_backup",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response User Backups-Download Shared User Backup"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/cleanup": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Cleanup Expired User Backups",
        "description": "Manually trigger cleanup of expired user backups (Admin only).",
        "operationId": "cleanup_expired_user_backups",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/user-backups/admin/users-overview": {
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Get Users Backup Overview",
        "description": "Admin endpoint: Get overview of all users with backup status.",
        "operationId": "get_users_backup_overview",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search user emails or names",
              "title": "Search"
            },
            "description": "Search user emails or names"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response User Backups-Get Users Backup Overview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/admin/backup-all": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Trigger Backup All Users",
        "description": "Admin endpoint: Trigger backup creation for all users.",
        "operationId": "trigger_backup_all_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "system",
              "title": "Backup Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-backups/admin/backup-specific": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Trigger Backup Specific Users",
        "description": "Admin endpoint: Trigger backup creation for specific users.",
        "operationId": "trigger_backup_specific_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "manual",
              "title": "Backup Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "User Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Me",
        "description": "Update own user profile.",
        "operationId": "update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/password": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/upload-profile-picture": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Upload Profile Picture",
        "description": "Upload a profile picture for the current user.",
        "operationId": "upload_profile_picture",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_users-upload_profile_picture"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Public Profile",
        "description": "Get a user's public profile (no authentication required).\nReturns only non-sensitive profile information.",
        "operationId": "get_user_public_profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile-picture/{user_id}/{filename}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Profile Picture",
        "description": "Serve profile pictures publicly (no authentication required).",
        "operationId": "get_profile_picture",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profiles": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List User Profiles",
        "description": "List user profiles with optional search.\nSearch looks in full_name and bio fields.",
        "operationId": "list_user_profiles",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublicProfile"
                  },
                  "title": "Response Users-List User Profiles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/{user_id}/stats": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Profile Stats",
        "description": "Get user profile statistics.",
        "operationId": "get_user_profile_stats",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me/profile": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Profile",
        "description": "Update user profile information only (no email or password changes).",
        "operationId": "update_user_profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/open": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User Open",
        "description": "Create new user without the need to be logged in.\nSends email verification if REQUIRE_EMAIL_VERIFICATION is enabled.",
        "operationId": "create_user_open",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateOpen"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "read_user_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "update_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "delete_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/verify-email": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Verify Email",
        "description": "Verify user email address using verification token.",
        "operationId": "verify_email",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/resend-verification": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Resend Verification",
        "description": "Resend email verification for a user.",
        "operationId": "resend_verification",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/test-email/": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "test_email",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email To"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/healthz": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Healthz",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/healthz/readiness": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Readyz",
        "operationId": "readyz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/healthz/liveness": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Liveness",
        "operationId": "liveness",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/rss-countries": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Available Rss Countries",
        "description": "Get list of available countries for RSS feed discovery from awesome-rss-feeds repository.",
        "operationId": "get_available_rss_countries",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/discover-rss-feeds": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Discover Rss Feeds",
        "description": "Discover RSS feeds from the awesome-rss-feeds repository.\n\nArgs:\n    country: Country name (e.g., \"Australia\", \"United States\") - if None, returns all countries\n    category: Category filter (e.g., \"News\", \"Technology\") - if None, returns all categories\n    limit: Maximum number of feeds to return",
        "operationId": "discover_rss_feeds",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Utils-Discover Rss Feeds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/extract-pdf-text": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Extract Pdf Text",
        "description": "Extract text from PDF without authentication",
        "operationId": "extract_pdf_text",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_utils-extract_pdf_text"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/extract-pdf-metadata": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Extract Pdf Metadata",
        "description": "Extract metadata from PDF including title, author, etc.",
        "operationId": "extract_pdf_metadata",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_utils-extract_pdf_metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/scrape_article": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Scrape Article",
        "description": "Scrape article content from a URL using the configured scraping provider.\n\nArgs:\n    url: The URL of the article to scrape\n    \nReturns:\n    The scraped article content",
        "operationId": "scrape_article",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/analyze_source": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Analyze Source",
        "description": "Analyze a news source to discover RSS feeds, categories, and recent articles.\n\nArgs:\n    base_url: The base URL of the news source to analyze\n    \nReturns:\n    Source analysis results including RSS feeds, categories, and articles",
        "operationId": "analyze_source",
        "parameters": [
          {
            "name": "base_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Base Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/discover_rss_feeds": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Discover Rss Feeds",
        "description": "Discover RSS feeds from a news source.\n\nArgs:\n    base_url: The base URL of the news source\n    \nReturns:\n    List of discovered RSS feed URLs",
        "operationId": "discover_rss_feeds",
        "parameters": [
          {
            "name": "base_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Base Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/browse_rss_feed": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Browse Rss Feed",
        "description": "Browse RSS feed items without ingesting them.\n\nArgs:\n    feed_url: The RSS feed URL to browse\n    limit: Maximum number of items to return (default 20)\n    \nReturns:\n    RSS feed metadata and recent items",
        "operationId": "browse_rss_feed",
        "parameters": [
          {
            "name": "feed_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Url"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/providers": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Providers",
        "description": "Returns a dynamic list of available classification providers and their models.\nDiscovers models from all configured providers (Ollama, OpenAI, Gemini).",
        "operationId": "get_providers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/ollama/pull-model": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Pull Ollama Model",
        "description": "Pull a model from Ollama registry.\nAdmin only endpoint for security.",
        "operationId": "pull_ollama_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/ollama/available-models": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Ollama Available Models",
        "description": "Fetch models from the *plain* Ollama Library page and return normalized JSON.\nOnly calls https://ollama.com/library (follows redirect from /library/).",
        "operationId": "get_ollama_available_models",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest",
              "title": "Sort"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Utils-Get Ollama Available Models"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/ollama/remove-model": {
      "delete": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Remove Ollama Model",
        "description": "Remove a model from Ollama.\nAdmin only endpoint for security.",
        "operationId": "remove_ollama_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/geocode_location": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Geocode Location",
        "operationId": "geocode_location",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/get_country_data": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Country Data",
        "operationId": "get_country_data",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Country"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/{location}/articles": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Location Articles",
        "operationId": "get_location_articles",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/app__api__v1__entities__routes__SearchType",
              "default": "text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/geojson/": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Geojson View",
        "operationId": "geojson_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/{entity_name}/articles": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Entity Articles",
        "operationId": "get_entity_articles",
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/leaders/{state}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Leader Info",
        "operationId": "get_leader_info",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/legislation/{state}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Legislation Data",
        "operationId": "get_legislation_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/econ_data/{state}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Econ Data",
        "operationId": "get_econ_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "GDP",
                "GDP_GROWTH"
              ],
              "title": "Indicators"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/update_leaders/": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Update Leaders",
        "operationId": "update_leaders",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/get_articles": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Tavily Data",
        "operationId": "get_tavily_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/score_over_time/{entity}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Entity Score Over Time",
        "operationId": "get_entity_score_over_time",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity"
            }
          },
          {
            "name": "score_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Score Type"
            }
          },
          {
            "name": "timeframe_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timeframe From"
            }
          },
          {
            "name": "timeframe_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timeframe To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entities/top_entities_by_score": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Top Entities By Score",
        "operationId": "get_top_entities_by_score",
        "parameters": [
          {
            "name": "score_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of score to rank entities by",
              "title": "Score Type"
            },
            "description": "Type of score to rank entities by"
          },
          {
            "name": "timeframe_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date in ISO format",
              "title": "Timeframe From"
            },
            "description": "Start date in ISO format"
          },
          {
            "name": "timeframe_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date in ISO format",
              "title": "Timeframe To"
            },
            "description": "End date in ISO format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of top entities to retrieve",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of top entities to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location}/contents": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Contents",
        "description": "Get articles related to a location with basic pagination.",
        "operationId": "get_location_contents",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location}/entities/contents": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Entities Contents",
        "description": "Get articles related to a location with basic pagination.",
        "operationId": "get_location_entities_contents",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/location_from_query": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Location From Query",
        "operationId": "location_from_query",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/geojson/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Geojson View",
        "operationId": "geojson_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/geojson_events": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Geojson Events View",
        "operationId": "geojson_events_view",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/dashboard": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Dashboard View",
        "operationId": "dashboard_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location_name}/entities": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Entities",
        "operationId": "get_location_entities",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "min_relevance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.0,
              "title": "Min Relevance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/leaders/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Leader Info",
        "operationId": "get_leader_info",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/legislation/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Legislation Data",
        "operationId": "get_legislation_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/econ_data/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Econ Data",
        "operationId": "get_econ_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "GDP",
                "GDP_GROWTH"
              ],
              "title": "Indicators"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/update_leaders/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Update Leaders",
        "operationId": "update_leaders",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/get_articles": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Tavily Data",
        "operationId": "get_tavily_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/get_coordinates": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Coordinates",
        "description": "Fetches the coordinates, bounding box, and location type for a given location.",
        "operationId": "get_coordinates",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en",
              "title": "Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/get_geojson_for_article_ids": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Get Geojson For Article Ids",
        "operationId": "get_geojson_for_article_ids",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Article Ids"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/metadata/{location}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Metadata",
        "description": "Get metadata about a location including supported features",
        "operationId": "get_location_metadata",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/channel/{service_name}/{path}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Channel Route",
        "description": "A channel route that forwards requests to a specified service.",
        "operationId": "channel_route",
        "parameters": [
          {
            "name": "service_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Name"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Path"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/contents": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Contents",
        "operationId": "get_contents",
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/app__api__v1__search__routes__SearchType",
              "default": "semantic"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "news_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "News Category"
            }
          },
          {
            "name": "secondary_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Secondary Categories"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keyword"
            }
          },
          {
            "name": "entities",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entities"
            }
          },
          {
            "name": "locations",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Locations"
            }
          },
          {
            "name": "topics",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Topics"
            }
          },
          {
            "name": "classification_scores",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Classification Scores"
            }
          },
          {
            "name": "keyword_weights",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keyword Weights"
            }
          },
          {
            "name": "exclude_keywords",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exclude Keywords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/most_relevant_entities": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Get Most Relevant Entities",
        "operationId": "get_most_relevant_entities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MostRelevantEntitiesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/search_synthesizer": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Synthesizer",
        "operationId": "search_synthesizer",
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/registration/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Registration Stats",
        "description": "Get registration statistics and status.\nAdmin only.",
        "operationId": "get_registration_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/{asset_id}/fragments": {
      "post": {
        "tags": [
          "Analysis Service",
          "Analysis Service"
        ],
        "summary": "Promote Fragment",
        "description": "Promote a fragment of information to a permanent feature of an asset.\nThis creates an auditable annotation and adds the fragment to the asset's metadata.",
        "operationId": "promote_fragment",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoteFragmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/analysis/adapters": {
      "get": {
        "tags": [
          "Analysis Service",
          "Analysis Adapters"
        ],
        "summary": "List Analysis Adapters",
        "description": "List all active and available analysis adapters.",
        "operationId": "list_analysis_adapters",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AnalysisAdapterRead"
                  },
                  "type": "array",
                  "title": "Response Analysis Service-List Analysis Adapters"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/analysis/adapters/{adapter_name}/execute": {
      "post": {
        "tags": [
          "Analysis Service",
          "Analysis Adapters"
        ],
        "summary": "Execute Analysis Adapter",
        "operationId": "execute_analysis_adapter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "adapter_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The registered name of the adapter",
              "title": "Adapter Name"
            },
            "description": "The registered name of the adapter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Analysis Service-Execute Analysis Adapter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotation_jobs/infospaces/{infospace_id}/runs/": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Run",
        "description": "Create a new Run.",
        "operationId": "create_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "List Runs",
        "description": "Retrieve Runs for the infospace.",
        "operationId": "list_runs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotation_jobs/infospaces/{infospace_id}/runs": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Run",
        "description": "Create a new Run.",
        "operationId": "create_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "List Runs",
        "description": "Retrieve Runs for the infospace.",
        "operationId": "list_runs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}": {
      "get": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Get Run",
        "description": "Retrieve a specific Run by its ID.",
        "operationId": "get_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations and assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations and assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Update Run",
        "description": "Update a Run.",
        "operationId": "update_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRunUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRunRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Delete Run",
        "description": "Delete a Run.",
        "operationId": "delete_run",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}/retry_failures": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Retry Failed Annotations",
        "description": "Retry failed annotations in a run.",
        "operationId": "retry_failed_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotation_jobs/infospaces/{infospace_id}/runs/{run_id}/create_package": {
      "post": {
        "tags": [
          "annotation_jobs",
          "Runs"
        ],
        "summary": "Create Package From Run Endpoint",
        "description": "Create a package from a run.",
        "operationId": "create_package_from_run_endpoint",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePackageFromRunRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/annotation_schemas/": {
      "post": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Create Annotation Schema",
        "description": "Create a new Annotation Schema.",
        "operationId": "create_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "List Annotation Schemas",
        "description": "Retrieve Annotation Schemas for the infospace.",
        "operationId": "list_annotation_schemas",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include archived (inactive) schemas",
              "default": false,
              "title": "Include Archived"
            },
            "description": "Include archived (inactive) schemas"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/annotation_schemas": {
      "post": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Create Annotation Schema",
        "description": "Create a new Annotation Schema.",
        "operationId": "create_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "List Annotation Schemas",
        "description": "Retrieve Annotation Schemas for the infospace.",
        "operationId": "list_annotation_schemas",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include archived (inactive) schemas",
              "default": false,
              "title": "Include Archived"
            },
            "description": "Include archived (inactive) schemas"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/annotation_schemas/{schema_id}": {
      "get": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Get Annotation Schema",
        "description": "Retrieve a specific Annotation Schema by its ID.",
        "operationId": "get_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of annotations using this schema",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of annotations using this schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Update Annotation Schema",
        "description": "Update an Annotation Schema.",
        "operationId": "update_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationSchemaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Delete Annotation Schema",
        "description": "Archive an annotation schema by setting it to inactive (soft delete).\nThis is a non-destructive operation.",
        "operationId": "delete_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the infospace",
              "title": "Infospace Id"
            },
            "description": "The ID of the infospace"
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/annotation_schemas/{schema_id}/restore": {
      "post": {
        "tags": [
          "AnnotationSchemas",
          "AnnotationSchemas"
        ],
        "summary": "Restore Annotation Schema",
        "description": "Restores an archived (soft-deleted) annotation schema.",
        "operationId": "restore_annotation_schema",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "schema_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSchemaRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotations/infospaces/{infospace_id}/annotations/": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Annotation",
        "description": "Create a new annotation.",
        "operationId": "create_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "List Annotations",
        "description": "Retrieve Annotations for the infospace.",
        "operationId": "list_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotations/infospaces/{infospace_id}/annotations": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Annotation",
        "description": "Create a new annotation.",
        "operationId": "create_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "List Annotations",
        "description": "Retrieve Annotations for the infospace.",
        "operationId": "list_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schema Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotations/infospaces/{infospace_id}/annotations/{annotation_id}": {
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Get Annotation",
        "description": "Retrieve a specific Annotation by its ID.",
        "operationId": "get_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Update Annotation",
        "description": "Update an Annotation.",
        "operationId": "update_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Delete Annotation",
        "description": "Delete an Annotation.",
        "operationId": "delete_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotations/infospaces/{infospace_id}/annotations/batch": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Create Batch Annotations",
        "description": "Create multiple annotations in a batch.",
        "operationId": "create_batch_annotations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnnotationCreate"
                },
                "title": "Annotations"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotations/infospaces/{infospace_id}/annotations/run/{run_id}/results": {
      "get": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Get Run Results",
        "description": "Retrieve all annotations for a specific AnnotationRun.\nThe service handles run ownership and infospace context verification.",
        "operationId": "get_run_results",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Run Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationRead"
                  },
                  "title": "Response Annotations-Get Run Results"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/annotations/infospaces/{infospace_id}/annotations/{annotation_id}/retry": {
      "post": {
        "tags": [
          "annotations",
          "Annotations"
        ],
        "summary": "Retry Single Annotation",
        "description": "Retries a single failed annotation synchronously.",
        "operationId": "retry_single_annotation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationRetryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Asset",
        "description": "Generic asset creation endpoint that routes to appropriate specific endpoint.\n\nThis endpoint maintains backward compatibility while using the new ContentService.\nBased on the asset data provided, it routes to the appropriate ingestion method:\n- If source_identifier (URL) is provided: ingest as web content\n- If text_content is provided: ingest as text\n- Otherwise: create a basic asset record",
        "operationId": "create_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "List Assets",
        "description": "Retrieve assets for an infospace.",
        "operationId": "list_assets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "parent_asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Asset",
        "description": "Generic asset creation endpoint that routes to appropriate specific endpoint.\n\nThis endpoint maintains backward compatibility while using the new ContentService.\nBased on the asset data provided, it routes to the appropriate ingestion method:\n- If source_identifier (URL) is provided: ingest as web content\n- If text_content is provided: ingest as text\n- Otherwise: create a basic asset record",
        "operationId": "create_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "List Assets",
        "description": "Retrieve assets for an infospace.",
        "operationId": "list_assets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "parent_asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/upload": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Upload File",
        "description": "Upload a file and create an asset.",
        "operationId": "upload_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-upload_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/ingest-url": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Url",
        "description": "Ingest content from a URL.",
        "operationId": "ingest_url",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "scrape_immediately",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Scrape Immediately"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/ingest-text": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Text",
        "description": "Ingest direct text content.",
        "operationId": "ingest_text",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "text_content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Content"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "event_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Timestamp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/compose-article": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Compose Article",
        "description": "Compose a free-form article with embedded assets and bundle references.",
        "operationId": "compose_article",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleComposition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/bulk-ingest-urls": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Bulk Ingest Urls",
        "description": "Ingest multiple URLs as separate assets.",
        "operationId": "bulk_ingest_urls",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUrlIngestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Bulk Ingest Urls"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/{asset_id}/reprocess": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Reprocess Asset",
        "description": "Reprocess an asset with new options.",
        "operationId": "reprocess_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReprocessOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/discover-rss-feeds": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Discover Rss Feeds",
        "description": "Discover RSS feeds from the awesome-rss-feeds repository.\n\nArgs:\n    country: Country name (e.g., \"Australia\", \"United States\") - if None, returns all countries\n    category: Category filter (e.g., \"News\", \"Technology\") - if None, returns all categories\n    limit: Maximum number of feeds to return",
        "operationId": "discover_rss_feeds",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assets-Discover Rss Feeds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/preview-rss-feed": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Preview Rss Feed",
        "description": "Preview the content of an RSS feed.",
        "operationId": "preview_rss_feed",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "feed_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Url"
            }
          },
          {
            "name": "max_items",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Max Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assets-Preview Rss Feed"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/create-rss-source": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Rss Source",
        "description": "Create a new Source of kind 'rss' and optionally set up a monitor for it.",
        "operationId": "create_rss_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RssSourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/ingest-selected-articles": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Selected Articles",
        "description": "Ingest selected articles from an RSS feed preview.\n\nArgs:\n    feed_url: URL of the RSS feed\n    selected_articles: List of article objects with at least 'link' and 'title'\n    bundle_id: Optional bundle to add articles to",
        "operationId": "ingest_selected_articles",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "feed_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Url"
            }
          },
          {
            "name": "bundle_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                },
                "title": "Selected Articles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assets-Ingest Selected Articles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/{asset_id}": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Asset",
        "description": "Get a specific asset.",
        "operationId": "get_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Update Asset",
        "description": "Update an asset.",
        "operationId": "update_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Delete Asset",
        "description": "Delete an asset and its children.",
        "operationId": "delete_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/{asset_id}/children": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Asset Children",
        "description": "Get child assets of a specific asset.",
        "operationId": "get_asset_children",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Get Asset Children"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/supported-types": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Supported Content Types",
        "description": "Get list of supported content types.",
        "operationId": "get_supported_content_types",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Assets-Get Supported Content Types"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/bulk-upload-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Assets Background Bulk",
        "description": "Upload multiple files as individual assets using background processing.\nReturns task IDs for progress tracking.",
        "operationId": "create_assets_background_bulk",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-create_assets_background_bulk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Create Assets Background Bulk"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/bulk-urls-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Create Assets Background Urls",
        "description": "Ingest multiple URLs using background processing.\nReturns task ID for progress tracking.",
        "operationId": "create_assets_background_urls",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUrlIngestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Create Assets Background Urls"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/bundles/{bundle_id}/add-files-background": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Add Files To Bundle Background",
        "description": "Add files to existing bundle using background processing.",
        "operationId": "add_files_to_bundle_background",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_assets-add_files_to_bundle_background"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Add Files To Bundle Background"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/tasks/{task_id}/status": {
      "get": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Get Task Status",
        "description": "Get the status of a background task.",
        "operationId": "get_task_status",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assets-Get Task Status"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/assets/ingest-rss-feeds-from-awesome": {
      "post": {
        "tags": [
          "assets",
          "Assets"
        ],
        "summary": "Ingest Rss Feeds From Awesome",
        "description": "Discover and ingest RSS feeds from the awesome-rss-feeds repository.\n\nThis endpoint will:\n1. Fetch RSS feeds from the specified country\n2. Optionally filter by category\n3. Ingest the feeds and their content\n4. Optionally add to a bundle",
        "operationId": "ingest_rss_feeds_from_awesome",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RSSDiscoveryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Assets-Ingest Rss Feeds From Awesome"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/backups": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Create Backup",
        "description": "Create a new backup of an infospace.",
        "operationId": "create_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceBackupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "List Backups",
        "description": "List backups for an infospace.",
        "operationId": "list_backups",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "List All User Backups",
        "description": "List all backups for a user across all infospaces.",
        "operationId": "list_all_user_backups",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/{backup_id}": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Get Backup",
        "description": "Get a specific backup by ID.",
        "operationId": "get_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Update Backup",
        "description": "Update backup metadata.",
        "operationId": "update_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceBackupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Delete Backup",
        "description": "Delete a backup and its associated file.",
        "operationId": "delete_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/{backup_id}/restore": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Restore Backup",
        "description": "Restore an infospace from a backup.",
        "operationId": "restore_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRestoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/{backup_id}/share": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Create Backup Share Link",
        "description": "Create a shareable link for a backup.",
        "operationId": "create_backup_share_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupShareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Backups-Create Backup Share Link"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/download/{share_token}": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Download Shared Backup",
        "description": "Download a backup using a share token.",
        "operationId": "download_shared_backup",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Backups-Download Shared Backup"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/cleanup": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Cleanup Expired Backups",
        "description": "Manually trigger cleanup of expired backups (admin function).",
        "operationId": "cleanup_expired_backups",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/backups/admin/infospaces-overview": {
      "get": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Get Infospaces Backup Overview",
        "description": "Admin endpoint: Get overview of all infospaces with backup status.",
        "operationId": "get_infospaces_backup_overview",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search infospace names or user emails",
              "title": "Search"
            },
            "description": "Search infospace names or user emails"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific user ID",
              "title": "User Id"
            },
            "description": "Filter by specific user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Backups-Get Infospaces Backup Overview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/admin/backup-all": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Trigger Backup All Infospaces",
        "description": "Admin endpoint: Trigger backup creation for all infospaces.",
        "operationId": "trigger_backup_all_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "manual",
              "title": "Backup Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/backups/admin/backup-specific": {
      "post": {
        "tags": [
          "Backups",
          "Backups"
        ],
        "summary": "Trigger Backup Specific Infospaces",
        "description": "Admin endpoint: Trigger backup creation for specific infospaces.",
        "operationId": "trigger_backup_specific_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "manual",
              "title": "Backup Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "Infospace Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/infospaces/{infospace_id}/bundles": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Create Bundle",
        "description": "Create a new bundle in an infospace.",
        "operationId": "create_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Bundles",
        "description": "Get bundles for an infospace.",
        "operationId": "get_bundles",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BundleRead"
                  },
                  "title": "Response Bundles-Get Bundles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/bundles/{bundle_id}": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Bundle",
        "description": "Get a bundle by ID.",
        "operationId": "get_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bundles"
        ],
        "summary": "Update Bundle",
        "description": "Update a bundle.",
        "operationId": "update_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "summary": "Delete Bundle",
        "description": "Delete a bundle.",
        "operationId": "delete_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/bundles/{bundle_id}/assets/{asset_id}": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Add Asset To Bundle",
        "description": "Add an existing asset to a bundle by ID.",
        "operationId": "add_asset_to_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "summary": "Remove Asset From Bundle",
        "description": "Remove an asset from a bundle by ID.",
        "operationId": "remove_asset_from_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/infospaces/{infospace_id}/bundles/{bundle_id}/assets": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Assets In Bundle",
        "description": "Get all assets within a specific bundle.",
        "operationId": "get_assets_in_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetRead"
                  },
                  "title": "Response Bundles-Get Assets In Bundle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/assets/{asset_id}": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "summary": "Get Asset",
        "description": "Get an asset by ID.",
        "operationId": "get_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/bundles/{bundle_id}/transfer": {
      "post": {
        "tags": [
          "Bundles"
        ],
        "summary": "Transfer Bundle",
        "description": "Transfer a bundle to another infospace.",
        "operationId": "transfer_bundle",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Bundle Id"
            }
          },
          {
            "name": "target_infospace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Infospace Id"
            }
          },
          {
            "name": "copy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Copy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/chat/chat": {
      "post": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "Intelligence Chat",
        "description": "Intelligence analysis chat with tool orchestration.\n\nThe AI model can search, analyze, and interact with your intelligence data.\nExample conversation:\n- User: \"What are the main themes in recent political documents?\"\n- AI: *calls search_assets tool* → *analyzes results* → Responds with findings",
        "operationId": "intelligence_chat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/chat/tools/execute": {
      "post": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "Execute Tool Call",
        "description": "Execute a tool call made by an AI model.\n\nThis endpoint is used when the AI model wants to interact with the intelligence platform\nthrough function calls (search assets, get annotations, etc.).",
        "operationId": "execute_tool_call",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/chat/models": {
      "get": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "List Available Models",
        "description": "Discover available language models across all providers.\n\nQuery parameters:\n- capability: Filter by capability ('tools', 'streaming', 'thinking', 'multimodal', etc.)\n\nReturns all available models from OpenAI, Ollama, Gemini, etc.",
        "operationId": "list_available_models",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "capability",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Capability"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/chat/tools": {
      "get": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "List Universal Tools",
        "description": "List universal intelligence analysis tool definitions.\n\nThese are the capabilities available to AI models.\nFastMCP automatically generates schemas from function signatures.",
        "operationId": "list_universal_tools",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/chat/tools/context/{infospace_id}": {
      "get": {
        "tags": [
          "Intelligence Chat"
        ],
        "summary": "Get Infospace Tool Context",
        "description": "Get infospace-specific context for tools (what's actually available).\n\nThis provides real data about available asset types, schemas, bundles, etc.\nto help AI models make better tool usage decisions.",
        "operationId": "get_infospace_tool_context",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/chunking/assets/{asset_id}/chunk": {
      "post": {
        "tags": [
          "chunking"
        ],
        "summary": "Chunk Single Asset",
        "description": "Chunk a single asset into text chunks.",
        "operationId": "chunk_single_asset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkAssetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkingResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/chunking/assets/chunk-batch": {
      "post": {
        "tags": [
          "chunking"
        ],
        "summary": "Chunk Multiple Assets",
        "description": "Chunk multiple assets based on filters.",
        "operationId": "chunk_multiple_assets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkAssetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Chunking-Chunk Multiple Assets"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/chunking/assets/{asset_id}/chunks": {
      "get": {
        "tags": [
          "chunking"
        ],
        "summary": "Get Asset Chunks",
        "description": "Get all chunks for a specific asset.",
        "operationId": "get_asset_chunks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetChunkRead"
                  },
                  "title": "Response Chunking-Get Asset Chunks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "chunking"
        ],
        "summary": "Remove Asset Chunks",
        "description": "Remove all chunks for an asset.",
        "operationId": "remove_asset_chunks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/chunking/stats": {
      "get": {
        "tags": [
          "chunking"
        ],
        "summary": "Get Chunking Statistics",
        "description": "Get chunking statistics.",
        "operationId": "get_chunking_statistics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific asset",
              "title": "Asset Id"
            },
            "description": "Filter by specific asset"
          },
          {
            "name": "infospace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by infospace",
              "title": "Infospace Id"
            },
            "description": "Filter by infospace"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkingStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/datasets/": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset within a specific infospace.",
        "operationId": "create_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "List Datasets",
        "description": "Retrieve datasets within a specific infospace.",
        "operationId": "list_datasets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/datasets": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset within a specific infospace.",
        "operationId": "create_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "List Datasets",
        "description": "Retrieve datasets within a specific infospace.",
        "operationId": "list_datasets",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Get Dataset",
        "description": "Get a specific dataset by ID.",
        "operationId": "get_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "Update a dataset.",
        "operationId": "update_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "Delete a dataset.",
        "operationId": "delete_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/datasets/{dataset_id}/export": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Export Dataset",
        "description": "Export a specific dataset as a self-contained package (ZIP).",
        "operationId": "export_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include full text content of data records",
              "default": false,
              "title": "Include Content"
            },
            "description": "Include full text content of data records"
          },
          {
            "name": "include_results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include associated classification results",
              "default": false,
              "title": "Include Results"
            },
            "description": "Include associated classification results"
          },
          {
            "name": "include_source_files",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include original source files (PDFs, CSVs, etc.)",
              "default": true,
              "title": "Include Source Files"
            },
            "description": "Include original source files (PDFs, CSVs, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/datasets/import": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Import Dataset",
        "description": "Import a dataset from an exported Dataset Package file.",
        "operationId": "import_dataset",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "conflict_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "How to handle conflicts",
              "default": "skip",
              "title": "Conflict Strategy"
            },
            "description": "How to handle conflicts"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_datasets-import_dataset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/datasets/import_from_token": {
      "post": {
        "tags": [
          "datasets",
          "datasets"
        ],
        "summary": "Import Dataset From Token",
        "description": "Import a dataset into the target infospace using a share token.\nThis internally performs an export from the source and then an import.",
        "operationId": "import_dataset_from_token",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "share_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Share token for the dataset",
              "title": "Share Token"
            },
            "description": "Share token for the dataset"
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include full text content if available",
              "default": false,
              "title": "Include Content"
            },
            "description": "Include full text content if available"
          },
          {
            "name": "include_results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include classification results if available",
              "default": false,
              "title": "Include Results"
            },
            "description": "Include classification results if available"
          },
          {
            "name": "conflict_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "How to handle conflicts",
              "default": "skip",
              "title": "Conflict Strategy"
            },
            "description": "How to handle conflicts"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/embeddings/models": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "List Embedding Models",
        "description": "List all available embedding models.",
        "operationId": "list_embedding_models",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only return active models",
              "default": true,
              "title": "Active Only"
            },
            "description": "Only return active models"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmbeddingModelRead"
                  },
                  "title": "Response Embeddings-List Embedding Models"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Create Embedding Model",
        "description": "Create a new embedding model.",
        "operationId": "create_embedding_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingModelRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/embeddings/models/available": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "Get Available Models",
        "description": "Get available models from the current embedding provider.",
        "operationId": "get_available_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/embeddings/health": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "Check Embedding Provider Health",
        "description": "Check the health of the embedding provider.",
        "operationId": "check_embedding_provider_health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/embeddings/models/{model_id}/stats": {
      "get": {
        "tags": [
          "embeddings"
        ],
        "summary": "Get Embedding Model Stats",
        "description": "Get statistics for an embedding model.",
        "operationId": "get_embedding_model_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/embeddings/generate": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Generate Embeddings",
        "description": "Generate embeddings for a list of asset chunks.",
        "operationId": "generate_embeddings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/embeddings/search": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Similarity Search",
        "description": "Perform similarity search using embeddings.",
        "operationId": "similarity_search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/embeddings/embed-text": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Embed Text",
        "description": "Generate embedding for a single text (utility endpoint).",
        "operationId": "embed_text",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EmbeddingProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/embeddings/test": {
      "post": {
        "tags": [
          "embeddings"
        ],
        "summary": "Test Embedding Provider",
        "description": "Test the embedding provider with a sample text.",
        "operationId": "test_embedding_provider",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_text",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "This is a test sentence for embedding generation.",
              "title": "Test Text"
            }
          },
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/embeddings/models/{model_id}": {
      "delete": {
        "tags": [
          "embeddings"
        ],
        "summary": "Deactivate Embedding Model",
        "description": "Deactivate an embedding model (soft delete).",
        "operationId": "deactivate_embedding_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/files/upload": {
      "post": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "File Upload",
        "description": "Upload a file to the configured storage provider.\nExpects form-data with a file.\nGenerates a unique object name based on user ID and filename.",
        "operationId": "file_upload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_filestorage-file_upload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/files/download": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "File Download",
        "description": "Download a file from the storage provider.\nExpects query parameter 'file_path' (the object name).\nThe file is saved temporarily and a background task deletes the temp file.",
        "operationId": "file_download",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/files/list": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "List Files",
        "description": "List files in the storage provider with user authorization.\nUsers can only list files in their own directory.",
        "operationId": "list_files",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            }
          },
          {
            "name": "max_keys",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Max Keys"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/files/delete": {
      "delete": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "Delete File",
        "description": "Delete a file with proper authorization checks.\nUsers can only delete files in their own directory.",
        "operationId": "delete_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "object_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/files/stream/{file_path}": {
      "get": {
        "tags": [
          "filestorage",
          "files"
        ],
        "summary": "Stream File",
        "description": "Stream a file directly from storage without creating temporary files.\nThis is more efficient for media files (images, videos, PDFs) that need to be displayed in browsers.",
        "operationId": "stream_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/filters/filters": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Save Filter",
        "description": "Save a reusable filter definition.",
        "operationId": "save_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filter Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Filter Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "List Filters",
        "description": "List all saved filter names.",
        "operationId": "list_filters",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Filters-List Filters"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/filters/filters/{filter_name}": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Filter",
        "description": "Get a saved filter definition.",
        "operationId": "get_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filter Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Get Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "filters"
        ],
        "summary": "Delete Filter",
        "description": "Delete a saved filter.",
        "operationId": "delete_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filter Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/filters/filters/test": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Test Filter",
        "description": "Test a filter against sample data.",
        "operationId": "test_filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_filters-test_filter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Filters-Test Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/filters/filters/examples/basic": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Basic Filter Examples",
        "description": "Get examples of basic filter configurations.",
        "operationId": "get_basic_filter_examples",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Filters-Get Basic Filter Examples"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/filters/filters/examples/advanced": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Advanced Filter Examples",
        "description": "Get examples of advanced filter configurations with composition.",
        "operationId": "get_advanced_filter_examples",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Filters-Get Advanced Filter Examples"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/filters/filters/factory/threshold": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Create Threshold Filter",
        "description": "Create a threshold filter using the factory.",
        "operationId": "create_threshold_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Field"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Threshold"
            }
          },
          {
            "name": "operator",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ">=",
              "title": "Operator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Create Threshold Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/filters/filters/factory/range": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Create Range Filter",
        "description": "Create a range filter using the factory.",
        "operationId": "create_range_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Field"
            }
          },
          {
            "name": "min_value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Min Value"
            }
          },
          {
            "name": "max_value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Max Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Create Range Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/filters/filters/factory/keywords": {
      "post": {
        "tags": [
          "filters"
        ],
        "summary": "Create Keyword Filter",
        "description": "Create a keyword filter using the factory.",
        "operationId": "create_keyword_filter",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Field"
            }
          },
          {
            "name": "match_any",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Match Any"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Keywords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Filters-Create Keyword Filter"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/healthz/readiness": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Readyz",
        "operationId": "readyz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/healthz/liveness": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Liveness",
        "operationId": "liveness",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/healthz/healthz": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Healthz",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/infospaces/": {
      "post": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Create Infospace",
        "description": "Create a new Infospace.",
        "operationId": "create_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "List Infospaces",
        "description": "Retrieve Infospaces for the current user.",
        "operationId": "list_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospacesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/infospaces": {
      "post": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Create Infospace",
        "description": "Create a new Infospace.",
        "operationId": "create_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "List Infospaces",
        "description": "Retrieve Infospaces for the current user.",
        "operationId": "list_infospaces",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospacesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/infospaces/{infospace_id}": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Get Infospace",
        "description": "Retrieve a specific Infospace by its ID.",
        "operationId": "get_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Update Infospace",
        "description": "Update an Infospace.",
        "operationId": "update_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfospaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Delete Infospace",
        "description": "Delete an Infospace.",
        "operationId": "delete_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/infospaces/{infospace_id}/stats": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Get Infospace Stats",
        "description": "Get statistics about an Infospace.",
        "operationId": "get_infospace_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Infospaces-Get Infospace Stats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/infospaces/import": {
      "get": {
        "tags": [
          "Infospaces",
          "Infospaces"
        ],
        "summary": "Import Infospace",
        "description": "Import an Infospace.",
        "operationId": "import_infospace",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfospaceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/password-recovery/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/reset-password/": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/password-recovery-html-content/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "recover_password_html_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/monitors": {
      "post": {
        "tags": [
          "Monitors"
        ],
        "summary": "Create Monitor",
        "description": "Create a new monitor in an infospace.",
        "operationId": "create_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Monitors"
        ],
        "summary": "List Monitors",
        "description": "List all monitors in an infospace.",
        "operationId": "list_monitors",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MonitorRead"
                  },
                  "title": "Response Monitors-List Monitors"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/monitors/{monitor_id}": {
      "get": {
        "tags": [
          "Monitors"
        ],
        "summary": "Get Monitor",
        "description": "Get a specific monitor by ID.",
        "operationId": "get_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Monitors"
        ],
        "summary": "Update Monitor",
        "description": "Update a monitor.",
        "operationId": "update_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Monitors"
        ],
        "summary": "Delete Monitor",
        "description": "Delete a monitor.",
        "operationId": "delete_monitor",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/monitors/{monitor_id}/execute": {
      "post": {
        "tags": [
          "Monitors"
        ],
        "summary": "Execute Monitor Manually",
        "description": "Manually trigger a monitor to check for new assets and create a run.",
        "operationId": "execute_monitor_manually",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "monitor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Monitor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pipelines/infospaces/{infospace_id}/pipelines": {
      "post": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Create Pipeline",
        "description": "Create a new Intelligence Pipeline.",
        "operationId": "create_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntelligencePipelineCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligencePipelineRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pipelines"
        ],
        "summary": "List Pipelines",
        "description": "List all Intelligence Pipelines in an infospace.",
        "operationId": "list_pipelines",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntelligencePipelineRead"
                  },
                  "title": "Response Pipelines-List Pipelines"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pipelines/{pipeline_id}": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Get Pipeline",
        "description": "Get a specific Intelligence Pipeline by ID.",
        "operationId": "get_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligencePipelineRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Update Pipeline",
        "description": "Update an Intelligence Pipeline.",
        "operationId": "update_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntelligencePipelineUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligencePipelineRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Delete Pipeline",
        "description": "Delete an Intelligence Pipeline.",
        "operationId": "delete_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pipelines/{pipeline_id}/execute": {
      "post": {
        "tags": [
          "Pipelines"
        ],
        "summary": "Execute Pipeline",
        "description": "Manually trigger an Intelligence Pipeline for a specific set of assets.",
        "operationId": "execute_pipeline",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pipeline Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "Asset Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineExecutionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search-ext/": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Content",
        "description": "Performs a search using the configured search provider (e.g., Tavily)\nand returns a standardized list of search results.",
        "operationId": "search_content",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "description": "The search query.",
              "title": "Query"
            },
            "description": "The search query."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of results to return.",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of results to return."
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search-ext": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Content",
        "description": "Performs a search using the configured search provider (e.g., Tavily)\nand returns a standardized list of search results.",
        "operationId": "search_content",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "description": "The search query.",
              "title": "Query"
            },
            "description": "The search query."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of results to return.",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of results to return."
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search_histories/create": {
      "post": {
        "tags": [
          "search-history"
        ],
        "summary": "Create Search History",
        "description": "Create a new search history entry.",
        "operationId": "create_search_history",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchHistoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/search_histories/read": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Read Search Histories",
        "description": "Retrieve search histories for the current user.",
        "operationId": "read_search_histories",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/{infospace_id}/links": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Create Shareable Link",
        "description": "Create a new shareable link for a resource within an infospace.",
        "operationId": "create_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareableLinkCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Get Shareable Links",
        "description": "Get shareable links for the current user, optionally filtered by resource and infospace.",
        "operationId": "get_shareable_links",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ResourceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/links/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Get Shareable Link By Token",
        "description": "Get a shareable link by token.",
        "operationId": "get_shareable_link_by_token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/links/{link_id}": {
      "put": {
        "tags": [
          "sharing"
        ],
        "summary": "Update Shareable Link",
        "description": "Update a shareable link by its ID (owner only).",
        "operationId": "update_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Link Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareableLinkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sharing"
        ],
        "summary": "Delete Shareable Link",
        "description": "Delete a shareable link by its ID (owner only).",
        "operationId": "delete_shareable_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Link Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/access/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Access Shared Resource",
        "description": "Access the resource associated with a shareable link token.",
        "operationId": "access_shared_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Sharing-Access Shared Resource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/view/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "View Shared Resource",
        "description": "Provides a read-only, public view of a shared resource (Asset or Bundle).\nThis endpoint is unauthenticated and relies on the link's validity.",
        "operationId": "view_shared_resource",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedResourcePreview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/{infospace_id}/stats": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Get Sharing Stats",
        "description": "Get sharing statistics for the current user within a specific infospace.",
        "operationId": "get_sharing_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareableLinkStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/{infospace_id}/export": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Export Resource",
        "description": "Export a resource from a specific infospace to a file.\nReturns a file download.",
        "operationId": "export_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_sharing-export_resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/import/{target_infospace_id}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Import Resource",
        "description": "Import a resource from a file into a specific infospace.",
        "operationId": "import_resource",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_sharing-import_resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/export-batch/{infospace_id}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Export Resources Batch",
        "description": "Export multiple resources of the same type to a ZIP archive.",
        "operationId": "export_resources_batch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful batch export, returns a ZIP archive.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., no resource IDs)"
          },
          "403": {
            "description": "Forbidden (e.g., permission denied for one or more resources)"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v2/sharing/export-mixed-batch/{infospace_id}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Export Mixed Batch",
        "description": "Export a mix of assets and bundles to a single ZIP archive.",
        "operationId": "export_mixed_batch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMixedBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/stream/{token}/{asset_id}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Stream Shared Asset File",
        "description": "Stream the file blob associated with a publicly shared asset.\nAccess is validated via the share token.",
        "operationId": "stream_shared_asset_file",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/download-bundle/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Download Shared Bundle",
        "description": "Download all assets within a publicly shared bundle as a ZIP archive.\nAccess is validated via the share token.",
        "operationId": "download_shared_bundle",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/download/{token}/{asset_id}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "Download Shared Asset File",
        "description": "Download the file blob associated with a publicly shared asset.\nAccess is validated via the share token.",
        "operationId": "download_shared_asset_file",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/view_dataset_package_summary/{token}": {
      "get": {
        "tags": [
          "sharing"
        ],
        "summary": "View Dataset Package Summary",
        "description": "Get a summary of a shared dataset package using its token.\nDoes not trigger a full download or import of the package data.",
        "operationId": "view_dataset_package_summary",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetPackageSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sharing/import-from-token/{token}": {
      "post": {
        "tags": [
          "sharing"
        ],
        "summary": "Import Resource From Token",
        "description": "Import a shared resource into the current user's specified infospace.",
        "operationId": "import_resource_from_token",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFromTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/sources/": {
      "post": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Create Source",
        "description": "Create a new source. If monitoring is enabled, a corresponding ingestion task\nand a destination bundle will also be created.",
        "operationId": "create_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "List Sources",
        "description": "Retrieve Sources for the infospace.",
        "operationId": "list_sources",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/sources": {
      "post": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Create Source",
        "description": "Create a new source. If monitoring is enabled, a corresponding ingestion task\nand a destination bundle will also be created.",
        "operationId": "create_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "List Sources",
        "description": "Retrieve Sources for the infospace.",
        "operationId": "list_sources",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/sources/{source_id}": {
      "get": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Get Source",
        "description": "Retrieve a specific Source by its ID.",
        "operationId": "get_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Id"
            }
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include counts of assets",
              "default": true,
              "title": "Include Counts"
            },
            "description": "Include counts of assets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Update Source",
        "description": "Update a Source.",
        "operationId": "update_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Delete Source",
        "description": "Delete a Source.",
        "operationId": "delete_source",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/infospaces/{infospace_id}/sources/transfer": {
      "post": {
        "tags": [
          "Sources",
          "Sources"
        ],
        "summary": "Transfer Sources",
        "description": "Transfer sources between infospaces.",
        "operationId": "transfer_sources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTransferResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/sso/discourse/login": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Initiate Discourse Login",
        "description": "Convenience endpoint to redirect users to Discourse login.\nWhen they click \"Log In\" on Discourse, Discourse will automatically\nredirect back to our /callback endpoint to handle SSO.",
        "operationId": "initiate_discourse_login",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/sso/discourse/callback": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Handle Discourse Sso",
        "description": "Handle SSO callback from Discourse.\nSince this is a server-to-server redirect, we can't rely on JWT tokens.\nInstead, redirect to a frontend page that can handle the authentication.",
        "operationId": "handle_discourse_sso",
        "parameters": [
          {
            "name": "sso",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SSO payload from Discourse",
              "title": "Sso"
            },
            "description": "SSO payload from Discourse"
          },
          {
            "name": "sig",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Signature from Discourse",
              "title": "Sig"
            },
            "description": "Signature from Discourse"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sso/discourse/logout": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Handle Discourse Logout",
        "description": "Handle logout from Discourse.\nThis is called when a user logs out from Discourse to also log them out of your app.",
        "operationId": "handle_discourse_logout",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/sso/discourse/info": {
      "get": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Get Discourse Sso Info",
        "description": "Get information about Discourse SSO configuration.\nUseful for debugging and setup verification.",
        "operationId": "get_discourse_sso_info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Sso-Get Discourse Sso Info"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sso/discourse/user-sync": {
      "post": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Sync User To Discourse",
        "description": "Manually sync a user to Discourse.\nThis can be useful for testing or forcing a user sync.",
        "operationId": "sync_user_to_discourse",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sso/discourse/complete": {
      "post": {
        "tags": [
          "sso",
          "SSO"
        ],
        "summary": "Complete Discourse Sso",
        "description": "Complete the SSO process with an authenticated user.\nReturns the redirect URL as JSON to avoid CORS issues with manual redirects.",
        "operationId": "complete_discourse_sso",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_sso-complete_discourse_sso"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Sso-Complete Discourse Sso"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/tasks/infospaces/{infospace_id}/tasks/": {
      "post": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Create Task",
        "description": "Create a new Recurring Task in the specified infospace.",
        "operationId": "create_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "List Tasks",
        "description": "Retrieve Tasks for the infospace using the service.",
        "operationId": "list_tasks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task status",
              "title": "Status"
            },
            "description": "Filter by task status"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task type",
              "title": "Type"
            },
            "description": "Filter by task type"
          },
          {
            "name": "is_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by is_enabled flag",
              "title": "Is Enabled"
            },
            "description": "Filter by is_enabled flag"
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/tasks/infospaces/{infospace_id}/tasks": {
      "post": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Create Task",
        "description": "Create a new Recurring Task in the specified infospace.",
        "operationId": "create_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "List Tasks",
        "description": "Retrieve Tasks for the infospace using the service.",
        "operationId": "list_tasks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task status",
              "title": "Status"
            },
            "description": "Filter by task status"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task type",
              "title": "Type"
            },
            "description": "Filter by task type"
          },
          {
            "name": "is_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by is_enabled flag",
              "title": "Is Enabled"
            },
            "description": "Filter by is_enabled flag"
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/tasks/infospaces/{infospace_id}/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Get Task",
        "description": "Retrieve a specific Task by its ID from the infospace.",
        "operationId": "get_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Update Task",
        "description": "Update a Task in the infospace.",
        "operationId": "update_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Delete Task",
        "description": "Delete a Task from the infospace.",
        "operationId": "delete_task",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/tasks/infospaces/{infospace_id}/tasks/{task_id}/execute": {
      "post": {
        "tags": [
          "tasks",
          "Tasks"
        ],
        "summary": "Execute Task Manually",
        "description": "Manually trigger the execution of a specific task.",
        "operationId": "execute_task_manually",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "infospace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Infospace Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Tasks-Execute Task Manually"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Create User Backup",
        "description": "Create a new backup of a complete user account (Admin only).",
        "operationId": "create_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "List User Backups",
        "description": "List user backups (Admin only).",
        "operationId": "list_user_backups",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "target_user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific target user",
              "title": "Target User Id"
            },
            "description": "Filter by specific target user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/{backup_id}": {
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Get User Backup",
        "description": "Get a specific user backup (Admin only).",
        "operationId": "get_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Update User Backup",
        "description": "Update user backup metadata (Admin only).",
        "operationId": "update_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBackupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Delete User Backup",
        "description": "Delete a user backup and its files (Admin only).",
        "operationId": "delete_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/{backup_id}/restore": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Restore User Backup",
        "description": "Restore a user from a backup (Admin only).",
        "operationId": "restore_user_backup",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupRestoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/{backup_id}/share": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Create User Backup Share Link",
        "description": "Create a shareable link for a user backup (Admin only).",
        "operationId": "create_user_backup_share_link",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBackupShareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response User Backups-Create User Backup Share Link"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/download/{share_token}": {
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Download Shared User Backup",
        "description": "Download a shared user backup.",
        "operationId": "download_shared_user_backup",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response User Backups-Download Shared User Backup"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/cleanup": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Cleanup Expired User Backups",
        "description": "Manually trigger cleanup of expired user backups (Admin only).",
        "operationId": "cleanup_expired_user_backups",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/user-backups/admin/users-overview": {
      "get": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Get Users Backup Overview",
        "description": "Admin endpoint: Get overview of all users with backup status.",
        "operationId": "get_users_backup_overview",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search user emails or names",
              "title": "Search"
            },
            "description": "Search user emails or names"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response User Backups-Get Users Backup Overview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/admin/backup-all": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Trigger Backup All Users",
        "description": "Admin endpoint: Trigger backup creation for all users.",
        "operationId": "trigger_backup_all_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "system",
              "title": "Backup Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-backups/admin/backup-specific": {
      "post": {
        "tags": [
          "User Backups",
          "User Backups"
        ],
        "summary": "Trigger Backup Specific Users",
        "description": "Admin endpoint: Trigger backup creation for specific users.",
        "operationId": "trigger_backup_specific_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "manual",
              "title": "Backup Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "User Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Me",
        "description": "Update own user profile.",
        "operationId": "update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/users/me/password": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/users/me/upload-profile-picture": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Upload Profile Picture",
        "description": "Upload a profile picture for the current user.",
        "operationId": "upload_profile_picture",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_users-upload_profile_picture"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/users/profile/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Public Profile",
        "description": "Get a user's public profile (no authentication required).\nReturns only non-sensitive profile information.",
        "operationId": "get_user_public_profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/profile-picture/{user_id}/{filename}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Profile Picture",
        "description": "Serve profile pictures publicly (no authentication required).",
        "operationId": "get_profile_picture",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/profiles": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List User Profiles",
        "description": "List user profiles with optional search.\nSearch looks in full_name and bio fields.",
        "operationId": "list_user_profiles",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublicProfile"
                  },
                  "title": "Response Users-List User Profiles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/profile/{user_id}/stats": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Profile Stats",
        "description": "Get user profile statistics.",
        "operationId": "get_user_profile_stats",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/me/profile": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Profile",
        "description": "Update user profile information only (no email or password changes).",
        "operationId": "update_user_profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/users/open": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User Open",
        "description": "Create new user without the need to be logged in.\nSends email verification if REQUIRE_EMAIL_VERIFICATION is enabled.",
        "operationId": "create_user_open",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateOpen"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "read_user_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "update_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "delete_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/verify-email": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Verify Email",
        "description": "Verify user email address using verification token.",
        "operationId": "verify_email",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/resend-verification": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Resend Verification",
        "description": "Resend email verification for a user.",
        "operationId": "resend_verification",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/test-email/": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "test_email",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email To"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/healthz": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Healthz",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/healthz/readiness": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Readyz",
        "operationId": "readyz",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/healthz/liveness": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Liveness",
        "operationId": "liveness",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/rss-countries": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Available Rss Countries",
        "description": "Get list of available countries for RSS feed discovery from awesome-rss-feeds repository.",
        "operationId": "get_available_rss_countries",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/discover-rss-feeds": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Discover Rss Feeds",
        "description": "Discover RSS feeds from the awesome-rss-feeds repository.\n\nArgs:\n    country: Country name (e.g., \"Australia\", \"United States\") - if None, returns all countries\n    category: Category filter (e.g., \"News\", \"Technology\") - if None, returns all categories\n    limit: Maximum number of feeds to return",
        "operationId": "discover_rss_feeds",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Utils-Discover Rss Feeds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/extract-pdf-text": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Extract Pdf Text",
        "description": "Extract text from PDF without authentication",
        "operationId": "extract_pdf_text",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_utils-extract_pdf_text"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/extract-pdf-metadata": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Extract Pdf Metadata",
        "description": "Extract metadata from PDF including title, author, etc.",
        "operationId": "extract_pdf_metadata",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_utils-extract_pdf_metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/scrape_article": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Scrape Article",
        "description": "Scrape article content from a URL using the configured scraping provider.\n\nArgs:\n    url: The URL of the article to scrape\n    \nReturns:\n    The scraped article content",
        "operationId": "scrape_article",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/analyze_source": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Analyze Source",
        "description": "Analyze a news source to discover RSS feeds, categories, and recent articles.\n\nArgs:\n    base_url: The base URL of the news source to analyze\n    \nReturns:\n    Source analysis results including RSS feeds, categories, and articles",
        "operationId": "analyze_source",
        "parameters": [
          {
            "name": "base_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Base Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/discover_rss_feeds": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Discover Rss Feeds",
        "description": "Discover RSS feeds from a news source.\n\nArgs:\n    base_url: The base URL of the news source\n    \nReturns:\n    List of discovered RSS feed URLs",
        "operationId": "discover_rss_feeds",
        "parameters": [
          {
            "name": "base_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Base Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/browse_rss_feed": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Browse Rss Feed",
        "description": "Browse RSS feed items without ingesting them.\n\nArgs:\n    feed_url: The RSS feed URL to browse\n    limit: Maximum number of items to return (default 20)\n    \nReturns:\n    RSS feed metadata and recent items",
        "operationId": "browse_rss_feed",
        "parameters": [
          {
            "name": "feed_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Url"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/providers": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Providers",
        "description": "Returns a dynamic list of available classification providers and their models.\nDiscovers models from all configured providers (Ollama, OpenAI, Gemini).",
        "operationId": "get_providers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/ollama/pull-model": {
      "post": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Pull Ollama Model",
        "description": "Pull a model from Ollama registry.\nAdmin only endpoint for security.",
        "operationId": "pull_ollama_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/ollama/available-models": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Ollama Available Models",
        "description": "Fetch models from the *plain* Ollama Library page and return normalized JSON.\nOnly calls https://ollama.com/library (follows redirect from /library/).",
        "operationId": "get_ollama_available_models",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest",
              "title": "Sort"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Utils-Get Ollama Available Models"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/ollama/remove-model": {
      "delete": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Remove Ollama Model",
        "description": "Remove a model from Ollama.\nAdmin only endpoint for security.",
        "operationId": "remove_ollama_model",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/geocode_location": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Geocode Location",
        "operationId": "geocode_location",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/utils/get_country_data": {
      "get": {
        "tags": [
          "utils",
          "Utilities"
        ],
        "summary": "Get Country Data",
        "operationId": "get_country_data",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Country"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/{location}/articles": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Location Articles",
        "operationId": "get_location_articles",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/app__api__v1__entities__routes__SearchType",
              "default": "text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/geojson/": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Geojson View",
        "operationId": "geojson_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/{entity_name}/articles": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Entity Articles",
        "operationId": "get_entity_articles",
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/leaders/{state}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Leader Info",
        "operationId": "get_leader_info",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/legislation/{state}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Legislation Data",
        "operationId": "get_legislation_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/econ_data/{state}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Econ Data",
        "operationId": "get_econ_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "GDP",
                "GDP_GROWTH"
              ],
              "title": "Indicators"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/update_leaders/": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Update Leaders",
        "operationId": "update_leaders",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/get_articles": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Tavily Data",
        "operationId": "get_tavily_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/score_over_time/{entity}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Entity Score Over Time",
        "operationId": "get_entity_score_over_time",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity"
            }
          },
          {
            "name": "score_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Score Type"
            }
          },
          {
            "name": "timeframe_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timeframe From"
            }
          },
          {
            "name": "timeframe_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timeframe To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/top_entities_by_score": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Get Top Entities By Score",
        "operationId": "get_top_entities_by_score",
        "parameters": [
          {
            "name": "score_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of score to rank entities by",
              "title": "Score Type"
            },
            "description": "Type of score to rank entities by"
          },
          {
            "name": "timeframe_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date in ISO format",
              "title": "Timeframe From"
            },
            "description": "Start date in ISO format"
          },
          {
            "name": "timeframe_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date in ISO format",
              "title": "Timeframe To"
            },
            "description": "End date in ISO format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of top entities to retrieve",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of top entities to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/{location}/contents": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Contents",
        "description": "Get articles related to a location with basic pagination.",
        "operationId": "get_location_contents",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/{location}/entities/contents": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Entities Contents",
        "description": "Get articles related to a location with basic pagination.",
        "operationId": "get_location_entities_contents",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/location_from_query": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Location From Query",
        "operationId": "location_from_query",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/geojson/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Geojson View",
        "operationId": "geojson_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/geojson_events": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Geojson Events View",
        "operationId": "geojson_events_view",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/dashboard": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Dashboard View",
        "operationId": "dashboard_view",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/{location_name}/entities": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Entities",
        "operationId": "get_location_entities",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "min_relevance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.0,
              "title": "Min Relevance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/leaders/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Leader Info",
        "operationId": "get_leader_info",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/legislation/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Legislation Data",
        "operationId": "get_legislation_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/econ_data/{state}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Econ Data",
        "operationId": "get_econ_data",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "GDP",
                "GDP_GROWTH"
              ],
              "title": "Indicators"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/update_leaders/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Update Leaders",
        "operationId": "update_leaders",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/get_articles": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Tavily Data",
        "operationId": "get_tavily_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/get_coordinates": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Coordinates",
        "description": "Fetches the coordinates, bounding box, and location type for a given location.",
        "operationId": "get_coordinates",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en",
              "title": "Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/get_geojson_for_article_ids": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Get Geojson For Article Ids",
        "operationId": "get_geojson_for_article_ids",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Article Ids"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/metadata/{location}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Location Metadata",
        "description": "Get metadata about a location including supported features",
        "operationId": "get_location_metadata",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/locations/channel/{service_name}/{path}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Channel Route",
        "description": "A channel route that forwards requests to a specified service.",
        "operationId": "channel_route",
        "parameters": [
          {
            "name": "service_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Name"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Path"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/contents": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Contents",
        "operationId": "get_contents",
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/app__api__v1__search__routes__SearchType",
              "default": "semantic"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "news_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "News Category"
            }
          },
          {
            "name": "secondary_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Secondary Categories"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keyword"
            }
          },
          {
            "name": "entities",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entities"
            }
          },
          {
            "name": "locations",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Locations"
            }
          },
          {
            "name": "topics",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Topics"
            }
          },
          {
            "name": "classification_scores",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Classification Scores"
            }
          },
          {
            "name": "keyword_weights",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keyword Weights"
            }
          },
          {
            "name": "exclude_keywords",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exclude Keywords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/most_relevant_entities": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Get Most Relevant Entities",
        "operationId": "get_most_relevant_entities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MostRelevantEntitiesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/search_synthesizer": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Synthesizer",
        "operationId": "search_synthesizer",
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalysisAdapterRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "input_schema_definition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Schema Definition"
          },
          "output_schema_definition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Schema Definition"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "module_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Path"
          },
          "adapter_type": {
            "type": "string",
            "title": "Adapter Type"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "creator_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "adapter_type",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "AnalysisAdapterRead"
      },
      "AnnotationCreate": {
        "properties": {
          "value": {
            "additionalProperties": true,
            "type": "object",
            "title": "Value"
          },
          "status": {
            "$ref": "#/components/schemas/ResultStatus",
            "default": "success"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "region": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "schema_id": {
            "type": "integer",
            "title": "Schema Id"
          },
          "run_id": {
            "type": "integer",
            "title": "Run Id"
          }
        },
        "type": "object",
        "required": [
          "value",
          "asset_id",
          "schema_id",
          "run_id"
        ],
        "title": "AnnotationCreate"
      },
      "AnnotationRead": {
        "properties": {
          "value": {
            "additionalProperties": true,
            "type": "object",
            "title": "Value"
          },
          "status": {
            "$ref": "#/components/schemas/ResultStatus",
            "default": "success"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "region": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "schema_id": {
            "type": "integer",
            "title": "Schema Id"
          },
          "run_id": {
            "type": "integer",
            "title": "Run Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "value",
          "id",
          "uuid",
          "asset_id",
          "schema_id",
          "run_id",
          "infospace_id",
          "user_id",
          "timestamp",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationRead"
      },
      "AnnotationRetryRequest": {
        "properties": {
          "custom_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Prompt",
            "description": "Optional additional guidance or prompt override for this specific retry"
          }
        },
        "type": "object",
        "title": "AnnotationRetryRequest",
        "description": "Request payload for retrying a single annotation with optional custom prompt."
      },
      "AnnotationRunCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "include_parent_context": {
            "type": "boolean",
            "title": "Include Parent Context",
            "default": false
          },
          "context_window": {
            "type": "integer",
            "title": "Context Window",
            "default": 0
          },
          "views_config": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Views Config"
          },
          "schema_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Schema Ids"
          },
          "target_asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Asset Ids"
          },
          "target_bundle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "schema_ids"
        ],
        "title": "AnnotationRunCreate"
      },
      "AnnotationRunPreview": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/RunStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "views_config": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Views Config"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "annotation_count": {
            "type": "integer",
            "title": "Annotation Count",
            "default": 0
          },
          "target_schemas": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Target Schemas",
            "default": []
          },
          "annotations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Annotations",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "uuid",
          "name",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationRunPreview",
        "description": "Preview model for shared annotation runs."
      },
      "AnnotationRunRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "include_parent_context": {
            "type": "boolean",
            "title": "Include Parent Context",
            "default": false
          },
          "context_window": {
            "type": "integer",
            "title": "Context Window",
            "default": 0
          },
          "views_config": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Views Config"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/RunStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "annotation_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotation Count"
          },
          "schema_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "status",
          "created_at",
          "updated_at",
          "started_at",
          "completed_at",
          "error_message"
        ],
        "title": "AnnotationRunRead"
      },
      "AnnotationRunUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          },
          "include_parent_context": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Parent Context"
          },
          "context_window": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window"
          },
          "views_config": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Views Config"
          }
        },
        "type": "object",
        "title": "AnnotationRunUpdate"
      },
      "AnnotationRunsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AnnotationRunRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AnnotationRunsOut"
      },
      "AnnotationSchemaCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_contract": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Contract"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "field_specific_justification_configs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FieldJustificationConfig"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Specific Justification Configs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "output_contract"
        ],
        "title": "AnnotationSchemaCreate"
      },
      "AnnotationSchemaRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_contract": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Contract"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "field_specific_justification_configs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FieldJustificationConfig"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Specific Justification Configs"
          },
          "annotation_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotation Count"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "name",
          "output_contract",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "created_at",
          "updated_at",
          "is_active"
        ],
        "title": "AnnotationSchemaRead"
      },
      "AnnotationSchemaUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_contract": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Contract"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "field_specific_justification_configs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FieldJustificationConfig"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Specific Justification Configs"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "AnnotationSchemaUpdate"
      },
      "AnnotationSchemasOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AnnotationSchemaRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AnnotationSchemasOut"
      },
      "AnnotationUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "region": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "title": "AnnotationUpdate"
      },
      "AnnotationsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AnnotationRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AnnotationsOut"
      },
      "ArticleComposition": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "embedded_assets": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedded Assets"
          },
          "referenced_bundles": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referenced Bundles"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "ArticleComposition"
      },
      "AssetChunkRead": {
        "properties": {
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "chunk_index": {
            "type": "integer",
            "title": "Chunk Index"
          },
          "text_content": {
            "type": "string",
            "title": "Text Content"
          },
          "chunk_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Metadata",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "asset_id",
          "chunk_index",
          "text_content",
          "id",
          "created_at"
        ],
        "title": "AssetChunkRead"
      },
      "AssetCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "kind": {
            "$ref": "#/components/schemas/AssetKind"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "infospace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Infospace Id"
          },
          "parent_asset_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Asset Id"
          },
          "part_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Index"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "cells": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cells"
          },
          "source_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Identifier"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "AssetCreate"
      },
      "AssetKind": {
        "type": "string",
        "enum": [
          "pdf",
          "web",
          "image",
          "video",
          "audio",
          "text",
          "csv",
          "csv_row",
          "mbox",
          "email",
          "pdf_page",
          "text_chunk",
          "image_region",
          "video_scene",
          "audio_segment",
          "article",
          "file"
        ],
        "title": "AssetKind"
      },
      "AssetPreview": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "kind": {
            "$ref": "#/components/schemas/AssetKind"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "children": {
            "items": {
              "$ref": "#/components/schemas/AssetPreview"
            },
            "type": "array",
            "title": "Children",
            "default": []
          },
          "is_container": {
            "type": "boolean",
            "title": "Is Container",
            "description": "Helper to know if this asset might have children (e.g., PDF, CSV).",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "kind",
          "created_at",
          "updated_at",
          "is_container"
        ],
        "title": "AssetPreview",
        "description": "A lightweight public representation of an Asset."
      },
      "AssetRead": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "kind": {
            "$ref": "#/components/schemas/AssetKind"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "parent_asset_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Asset Id"
          },
          "part_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Index"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "source_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Identifier"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "content_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Hash"
          },
          "fragments": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fragments"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "processing_status": {
            "$ref": "#/components/schemas/ProcessingStatus",
            "default": "ready"
          },
          "processing_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Error"
          },
          "is_container": {
            "type": "boolean",
            "title": "Is Container",
            "description": "True if this asset can have child assets.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "title",
          "kind",
          "id",
          "uuid",
          "parent_asset_id",
          "part_index",
          "infospace_id",
          "source_id",
          "created_at",
          "updated_at",
          "is_container"
        ],
        "title": "AssetRead"
      },
      "AssetUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssetKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "blob_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Path"
          },
          "source_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Identifier"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          }
        },
        "type": "object",
        "title": "AssetUpdate"
      },
      "AssetsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AssetRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "AssetsOut"
      },
      "BackupRestoreRequest": {
        "properties": {
          "backup_id": {
            "type": "integer",
            "title": "Backup Id"
          },
          "target_infospace_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Infospace Name"
          },
          "conflict_strategy": {
            "type": "string",
            "title": "Conflict Strategy",
            "default": "skip"
          }
        },
        "type": "object",
        "required": [
          "backup_id"
        ],
        "title": "BackupRestoreRequest"
      },
      "BackupShareRequest": {
        "properties": {
          "backup_id": {
            "type": "integer",
            "title": "Backup Id"
          },
          "is_shareable": {
            "type": "boolean",
            "title": "Is Shareable",
            "default": true
          },
          "expiration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Hours"
          }
        },
        "type": "object",
        "required": [
          "backup_id"
        ],
        "title": "BackupShareRequest"
      },
      "Body_assets-add_files_to_bundle_background": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "options": {
            "type": "string",
            "title": "Options",
            "default": "{}"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_assets-add_files_to_bundle_background"
      },
      "Body_assets-create_assets_background_bulk": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "options": {
            "type": "string",
            "title": "Options",
            "default": "{}"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_assets-create_assets_background_bulk"
      },
      "Body_assets-upload_file": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "process_immediately": {
            "type": "boolean",
            "title": "Process Immediately",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_assets-upload_file"
      },
      "Body_datasets-import_dataset": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Dataset Package file (.zip)"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_datasets-import_dataset"
      },
      "Body_filestorage-file_upload": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "File to upload"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_filestorage-file_upload"
      },
      "Body_filters-test_filter": {
        "properties": {
          "filter_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filter Config"
          },
          "test_data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Test Data"
          }
        },
        "type": "object",
        "required": [
          "filter_config",
          "test_data"
        ],
        "title": "Body_filters-test_filter"
      },
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login-login_access_token"
      },
      "Body_sharing-export_resource": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "integer",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "Body_sharing-export_resource"
      },
      "Body_sharing-import_resource": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_sharing-import_resource"
      },
      "Body_sso-complete_discourse_sso": {
        "properties": {
          "sso": {
            "type": "string",
            "title": "Sso"
          },
          "sig": {
            "type": "string",
            "title": "Sig"
          }
        },
        "type": "object",
        "required": [
          "sso",
          "sig"
        ],
        "title": "Body_sso-complete_discourse_sso"
      },
      "Body_users-upload_profile_picture": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_users-upload_profile_picture"
      },
      "Body_utils-extract_pdf_metadata": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_utils-extract_pdf_metadata"
      },
      "Body_utils-extract_pdf_text": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_utils-extract_pdf_text"
      },
      "BulkUrlIngestion": {
        "properties": {
          "urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Urls"
          },
          "base_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Title"
          },
          "scrape_immediately": {
            "type": "boolean",
            "title": "Scrape Immediately",
            "default": true
          },
          "bundle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Id"
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "BulkUrlIngestion"
      },
      "BundleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "asset_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Asset Ids",
            "default": []
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "bundle_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Metadata"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "BundleCreate"
      },
      "BundlePreview": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/AssetPreview"
            },
            "type": "array",
            "title": "Assets"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at",
          "assets"
        ],
        "title": "BundlePreview",
        "description": "A lightweight public representation of a Bundle."
      },
      "BundleRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "asset_count": {
            "type": "integer",
            "title": "Asset Count"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "bundle_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "infospace_id",
          "created_at",
          "updated_at",
          "asset_count",
          "uuid",
          "user_id"
        ],
        "title": "BundleRead"
      },
      "BundleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "bundle_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Metadata"
          }
        },
        "type": "object",
        "title": "BundleUpdate"
      },
      "ChatMessage": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "ChatMessage",
        "description": "Individual message in a conversation."
      },
      "ChatRequest": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "type": "array",
            "title": "Messages"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "default": false
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "thinking_enabled": {
            "type": "boolean",
            "title": "Thinking Enabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "messages",
          "model_name",
          "infospace_id"
        ],
        "title": "ChatRequest",
        "description": "Request for intelligence analysis chat."
      },
      "ChatResponse": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "model_used": {
            "type": "string",
            "title": "Model Used"
          },
          "usage": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls"
          },
          "thinking_trace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thinking Trace"
          },
          "finish_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Reason"
          }
        },
        "type": "object",
        "required": [
          "content",
          "model_used"
        ],
        "title": "ChatResponse",
        "description": "Response from intelligence analysis chat."
      },
      "ChunkAssetRequest": {
        "properties": {
          "strategy": {
            "type": "string",
            "title": "Strategy",
            "default": "token"
          },
          "chunk_size": {
            "type": "integer",
            "title": "Chunk Size",
            "default": 512
          },
          "chunk_overlap": {
            "type": "integer",
            "title": "Chunk Overlap",
            "default": 50
          },
          "overwrite_existing": {
            "type": "boolean",
            "title": "Overwrite Existing",
            "default": false
          }
        },
        "type": "object",
        "title": "ChunkAssetRequest"
      },
      "ChunkAssetsRequest": {
        "properties": {
          "asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Ids"
          },
          "asset_kinds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Kinds"
          },
          "infospace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Infospace Id"
          },
          "strategy": {
            "type": "string",
            "title": "Strategy",
            "default": "token"
          },
          "chunk_size": {
            "type": "integer",
            "title": "Chunk Size",
            "default": 512
          },
          "chunk_overlap": {
            "type": "integer",
            "title": "Chunk Overlap",
            "default": 50
          },
          "overwrite_existing": {
            "type": "boolean",
            "title": "Overwrite Existing",
            "default": false
          }
        },
        "type": "object",
        "title": "ChunkAssetsRequest"
      },
      "ChunkingResultResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "chunks_created": {
            "type": "integer",
            "title": "Chunks Created"
          },
          "strategy_used": {
            "type": "string",
            "title": "Strategy Used"
          },
          "strategy_params": {
            "additionalProperties": true,
            "type": "object",
            "title": "Strategy Params"
          }
        },
        "type": "object",
        "required": [
          "message",
          "asset_id",
          "chunks_created",
          "strategy_used",
          "strategy_params"
        ],
        "title": "ChunkingResultResponse"
      },
      "ChunkingStatsResponse": {
        "properties": {
          "total_chunks": {
            "type": "integer",
            "title": "Total Chunks"
          },
          "total_characters": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Characters",
            "default": 0
          },
          "average_chunk_size": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Chunk Size",
            "default": 0.0
          },
          "assets_with_chunks": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assets With Chunks",
            "default": 0
          },
          "strategies_used": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strategies Used",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "total_chunks"
        ],
        "title": "ChunkingStatsResponse"
      },
      "CreatePackageFromRunRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreatePackageFromRunRequest"
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "asset_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Asset Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate"
      },
      "DatasetPackageEntitySummary": {
        "properties": {
          "entity_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Uuid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "DatasetPackageEntitySummary"
      },
      "DatasetPackageFileManifestItem": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "original_collection_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Collection Uuid"
          },
          "original_collection_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Collection Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "linked_asset_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linked Asset Uuid"
          }
        },
        "type": "object",
        "required": [
          "filename"
        ],
        "title": "DatasetPackageFileManifestItem"
      },
      "DatasetPackageSummary": {
        "properties": {
          "package_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Package Metadata"
          },
          "dataset_details": {
            "$ref": "#/components/schemas/DatasetPackageEntitySummary"
          },
          "record_count": {
            "type": "integer",
            "title": "Record Count",
            "default": 0
          },
          "annotation_results_count": {
            "type": "integer",
            "title": "Annotation Results Count",
            "default": 0
          },
          "included_schemas": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageEntitySummary"
            },
            "type": "array",
            "title": "Included Schemas",
            "default": []
          },
          "included_runs": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageEntitySummary"
            },
            "type": "array",
            "title": "Included Runs",
            "default": []
          },
          "linked_collections_summary": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageEntitySummary"
            },
            "type": "array",
            "title": "Linked Collections Summary",
            "default": []
          },
          "source_files_manifest": {
            "items": {
              "$ref": "#/components/schemas/DatasetPackageFileManifestItem"
            },
            "type": "array",
            "title": "Source Files Manifest",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "package_metadata",
          "dataset_details"
        ],
        "title": "DatasetPackageSummary"
      },
      "DatasetRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Ids"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "entity_uuid": {
            "type": "string",
            "title": "Entity Uuid"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "infospace_id",
          "created_at",
          "entity_uuid",
          "user_id",
          "updated_at"
        ],
        "title": "DatasetRead"
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Ids"
          }
        },
        "type": "object",
        "title": "DatasetUpdate"
      },
      "DatasetsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/DatasetRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "DatasetsOut"
      },
      "EmbeddingGenerateRequest": {
        "properties": {
          "chunk_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Chunk Ids"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          }
        },
        "type": "object",
        "required": [
          "chunk_ids",
          "model_name",
          "provider"
        ],
        "title": "EmbeddingGenerateRequest"
      },
      "EmbeddingModelCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "dimension": {
            "type": "integer",
            "title": "Dimension"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "default": {}
          },
          "max_sequence_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Sequence Length"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "dimension"
        ],
        "title": "EmbeddingModelCreate"
      },
      "EmbeddingModelRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "dimension": {
            "type": "integer",
            "title": "Dimension"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "default": {}
          },
          "max_sequence_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Sequence Length"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "embedding_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Time Ms"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "dimension",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "EmbeddingModelRead"
      },
      "EmbeddingProvider": {
        "type": "string",
        "enum": [
          "ollama",
          "jina",
          "openai",
          "huggingface"
        ],
        "title": "EmbeddingProvider"
      },
      "EmbeddingSearchRequest": {
        "properties": {
          "query_text": {
            "type": "string",
            "title": "Query Text"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 10
          },
          "distance_threshold": {
            "type": "number",
            "title": "Distance Threshold",
            "default": 1.0
          },
          "distance_function": {
            "type": "string",
            "title": "Distance Function",
            "default": "cosine"
          }
        },
        "type": "object",
        "required": [
          "query_text",
          "model_name",
          "provider"
        ],
        "title": "EmbeddingSearchRequest"
      },
      "EmbeddingSearchResponse": {
        "properties": {
          "query_text": {
            "type": "string",
            "title": "Query Text"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingSearchResult"
            },
            "type": "array",
            "title": "Results"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "distance_function": {
            "type": "string",
            "title": "Distance Function"
          }
        },
        "type": "object",
        "required": [
          "query_text",
          "results",
          "model_name",
          "distance_function"
        ],
        "title": "EmbeddingSearchResponse"
      },
      "EmbeddingSearchResult": {
        "properties": {
          "chunk_id": {
            "type": "integer",
            "title": "Chunk Id"
          },
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "distance": {
            "type": "number",
            "title": "Distance"
          },
          "similarity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity"
          }
        },
        "type": "object",
        "required": [
          "chunk_id",
          "asset_id",
          "text_content",
          "distance"
        ],
        "title": "EmbeddingSearchResult"
      },
      "EmbeddingStatsResponse": {
        "properties": {
          "model_id": {
            "type": "integer",
            "title": "Model Id"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "dimension": {
            "type": "integer",
            "title": "Dimension"
          },
          "embedding_count": {
            "type": "integer",
            "title": "Embedding Count"
          },
          "table_size": {
            "type": "string",
            "title": "Table Size"
          },
          "avg_embedding_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Embedding Time Ms"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "model_name",
          "provider",
          "dimension",
          "embedding_count",
          "table_size"
        ],
        "title": "EmbeddingStatsResponse"
      },
      "ExportBatchRequest": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Resource Ids"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_ids"
        ],
        "title": "ExportBatchRequest"
      },
      "ExportMixedBatchRequest": {
        "properties": {
          "asset_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Asset Ids",
            "default": []
          },
          "bundle_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Bundle Ids",
            "default": []
          }
        },
        "type": "object",
        "title": "ExportMixedBatchRequest"
      },
      "FieldJustificationConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "custom_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Prompt"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "FieldJustificationConfig"
      },
      "FileUploadResponse": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original uploaded filename"
          },
          "object_name": {
            "type": "string",
            "title": "Object Name",
            "description": "Object name in storage"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "object_name"
        ],
        "title": "FileUploadResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImportFromTokenRequest": {
        "properties": {
          "target_infospace_id": {
            "type": "integer",
            "title": "Target Infospace Id"
          }
        },
        "type": "object",
        "required": [
          "target_infospace_id"
        ],
        "title": "ImportFromTokenRequest"
      },
      "InfospaceBackupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "backup_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Type",
            "default": "manual"
          },
          "include_sources": {
            "type": "boolean",
            "title": "Include Sources",
            "default": true
          },
          "include_schemas": {
            "type": "boolean",
            "title": "Include Schemas",
            "default": true
          },
          "include_runs": {
            "type": "boolean",
            "title": "Include Runs",
            "default": true
          },
          "include_datasets": {
            "type": "boolean",
            "title": "Include Datasets",
            "default": true
          },
          "include_annotations": {
            "type": "boolean",
            "title": "Include Annotations",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "InfospaceBackupCreate"
      },
      "InfospaceBackupRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "backup_type": {
            "type": "string",
            "title": "Backup Type"
          },
          "storage_path": {
            "type": "string",
            "title": "Storage Path"
          },
          "file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size Bytes"
          },
          "content_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Hash"
          },
          "included_sources": {
            "type": "integer",
            "title": "Included Sources",
            "default": 0
          },
          "included_assets": {
            "type": "integer",
            "title": "Included Assets",
            "default": 0
          },
          "included_schemas": {
            "type": "integer",
            "title": "Included Schemas",
            "default": 0
          },
          "included_runs": {
            "type": "integer",
            "title": "Included Runs",
            "default": 0
          },
          "included_datasets": {
            "type": "integer",
            "title": "Included Datasets",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "is_shareable": {
            "type": "boolean",
            "title": "Is Shareable",
            "default": false
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "is_expired": {
            "type": "boolean",
            "title": "Is Expired",
            "description": "Check if backup has expired.",
            "readOnly": true
          },
          "is_ready": {
            "type": "boolean",
            "title": "Is Ready",
            "description": "Check if backup is ready for use.",
            "readOnly": true
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url",
            "description": "Generate download URL if backup is shareable.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "backup_type",
          "storage_path",
          "status",
          "created_at",
          "is_expired",
          "is_ready",
          "download_url"
        ],
        "title": "InfospaceBackupRead"
      },
      "InfospaceBackupUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_shareable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Shareable"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "title": "InfospaceBackupUpdate"
      },
      "InfospaceBackupsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/InfospaceBackupRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "InfospaceBackupsOut"
      },
      "InfospaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "vector_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vector Backend"
          },
          "embedding_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Model"
          },
          "embedding_dim": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Dim"
          },
          "chunk_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Size"
          },
          "chunk_overlap": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Overlap"
          },
          "chunk_strategy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Strategy"
          }
        },
        "type": "object",
        "required": [
          "name",
          "owner_id"
        ],
        "title": "InfospaceCreate"
      },
      "InfospaceRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "owner_id",
          "created_at"
        ],
        "title": "InfospaceRead"
      },
      "InfospaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "vector_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vector Backend"
          },
          "embedding_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Model"
          },
          "embedding_dim": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Dim"
          },
          "chunk_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Size"
          },
          "chunk_overlap": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Overlap"
          },
          "chunk_strategy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Strategy"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          }
        },
        "type": "object",
        "title": "InfospaceUpdate"
      },
      "InfospacesOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/InfospaceRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "InfospacesOut"
      },
      "IntelligencePipelineCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_bundle_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Source Bundle Ids"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/PipelineStepCreate"
            },
            "type": "array",
            "title": "Steps"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_bundle_ids",
          "steps"
        ],
        "title": "IntelligencePipelineCreate"
      },
      "IntelligencePipelineRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_bundle_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Source Bundle Ids"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "linked_task_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linked Task Id"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/PipelineStepRead"
            },
            "type": "array",
            "title": "Steps"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_bundle_ids",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "linked_task_id",
          "steps"
        ],
        "title": "IntelligencePipelineRead"
      },
      "IntelligencePipelineUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_bundle_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Bundle Ids"
          },
          "steps": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PipelineStepCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Steps"
          }
        },
        "type": "object",
        "title": "IntelligencePipelineUpdate"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "ModelInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "supports_structured_output": {
            "type": "boolean",
            "title": "Supports Structured Output",
            "default": false
          },
          "supports_tools": {
            "type": "boolean",
            "title": "Supports Tools",
            "default": false
          },
          "supports_streaming": {
            "type": "boolean",
            "title": "Supports Streaming",
            "default": false
          },
          "supports_thinking": {
            "type": "boolean",
            "title": "Supports Thinking",
            "default": false
          },
          "supports_multimodal": {
            "type": "boolean",
            "title": "Supports Multimodal",
            "default": false
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "context_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Length"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider"
        ],
        "title": "ModelInfo",
        "description": "Information about a language model."
      },
      "ModelListResponse": {
        "properties": {
          "models": {
            "items": {
              "$ref": "#/components/schemas/ModelInfo"
            },
            "type": "array",
            "title": "Models"
          },
          "providers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "models",
          "providers"
        ],
        "title": "ModelListResponse",
        "description": "Response listing available models."
      },
      "MonitorCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "schedule": {
            "type": "string",
            "title": "Schedule"
          },
          "target_bundle_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Target Bundle Ids"
          },
          "target_schema_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Target Schema Ids"
          },
          "run_config_override": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Config Override",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "schedule",
          "target_bundle_ids",
          "target_schema_ids"
        ],
        "title": "MonitorCreate"
      },
      "MonitorRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "schedule": {
            "type": "string",
            "title": "Schedule"
          },
          "target_bundle_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Target Bundle Ids"
          },
          "target_schema_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Target Schema Ids"
          },
          "run_config_override": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Config Override",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "linked_task_id": {
            "type": "integer",
            "title": "Linked Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "last_checked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checked At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "schedule",
          "target_bundle_ids",
          "target_schema_ids",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "linked_task_id",
          "status"
        ],
        "title": "MonitorRead"
      },
      "MonitorUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule"
          },
          "target_bundle_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Ids"
          },
          "target_schema_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Schema Ids"
          },
          "run_config_override": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Config Override"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "MonitorUpdate"
      },
      "MostRelevantEntitiesRequest": {
        "properties": {
          "article_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Article Ids"
          }
        },
        "type": "object",
        "required": [
          "article_ids"
        ],
        "title": "MostRelevantEntitiesRequest"
      },
      "NewPassword": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "NewPassword"
      },
      "PackageRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "infospace_id",
          "created_at"
        ],
        "title": "PackageRead"
      },
      "Paginated": {
        "properties": {
          "data": {
            "items": {},
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "Paginated"
      },
      "PermissionLevel": {
        "type": "string",
        "enum": [
          "read_only",
          "edit",
          "full_access"
        ],
        "title": "PermissionLevel"
      },
      "PipelineExecutionRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "pipeline_id": {
            "type": "integer",
            "title": "Pipeline Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "trigger_type": {
            "type": "string",
            "title": "Trigger Type"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "triggering_asset_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Triggering Asset Ids"
          }
        },
        "type": "object",
        "required": [
          "id",
          "pipeline_id",
          "status",
          "trigger_type",
          "started_at",
          "completed_at",
          "triggering_asset_ids"
        ],
        "title": "PipelineExecutionRead"
      },
      "PipelineStepCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "step_order": {
            "type": "integer",
            "title": "Step Order"
          },
          "step_type": {
            "type": "string",
            "title": "Step Type",
            "description": "Type of step: ANNOTATE, FILTER, ANALYZE, BUNDLE"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "description": "Configuration for the step"
          },
          "input_source": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Source",
            "description": "Source of input for this step"
          }
        },
        "type": "object",
        "required": [
          "name",
          "step_order",
          "step_type",
          "configuration",
          "input_source"
        ],
        "title": "PipelineStepCreate"
      },
      "PipelineStepRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "step_order": {
            "type": "integer",
            "title": "Step Order"
          },
          "step_type": {
            "type": "string",
            "title": "Step Type",
            "description": "Type of step: ANNOTATE, FILTER, ANALYZE, BUNDLE"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "description": "Configuration for the step"
          },
          "input_source": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Source",
            "description": "Source of input for this step"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "pipeline_id": {
            "type": "integer",
            "title": "Pipeline Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "step_order",
          "step_type",
          "configuration",
          "input_source",
          "id",
          "pipeline_id"
        ],
        "title": "PipelineStepRead"
      },
      "ProcessingStatus": {
        "type": "string",
        "enum": [
          "ready",
          "pending",
          "processing",
          "failed"
        ],
        "title": "ProcessingStatus",
        "description": "Status for asset processing (creating child assets)."
      },
      "PromoteFragmentRequest": {
        "properties": {
          "fragment_key": {
            "type": "string",
            "title": "Fragment Key"
          },
          "fragment_value": {
            "title": "Fragment Value"
          }
        },
        "type": "object",
        "required": [
          "fragment_key",
          "fragment_value"
        ],
        "title": "PromoteFragmentRequest"
      },
      "ProviderInfo": {
        "properties": {
          "provider_name": {
            "type": "string",
            "title": "Provider Name"
          },
          "models": {
            "items": {
              "$ref": "#/components/schemas/ProviderModel"
            },
            "type": "array",
            "title": "Models"
          }
        },
        "type": "object",
        "required": [
          "provider_name",
          "models"
        ],
        "title": "ProviderInfo"
      },
      "ProviderListResponse": {
        "properties": {
          "providers": {
            "items": {
              "$ref": "#/components/schemas/ProviderInfo"
            },
            "type": "array",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "providers"
        ],
        "title": "ProviderListResponse"
      },
      "ProviderModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProviderModel"
      },
      "QueryType": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "QueryType"
      },
      "RSSDiscoveryRequest": {
        "properties": {
          "country": {
            "type": "string",
            "title": "Country"
          },
          "category_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Filter"
          },
          "max_feeds": {
            "type": "integer",
            "title": "Max Feeds",
            "default": 10
          },
          "max_items_per_feed": {
            "type": "integer",
            "title": "Max Items Per Feed",
            "default": 20
          },
          "bundle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle Id"
          },
          "options": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "country"
        ],
        "title": "RSSDiscoveryRequest"
      },
      "RegistrationStats": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "users_created_today": {
            "type": "integer",
            "title": "Users Created Today"
          },
          "users_created_this_week": {
            "type": "integer",
            "title": "Users Created This Week"
          },
          "users_created_this_month": {
            "type": "integer",
            "title": "Users Created This Month"
          },
          "open_registration_enabled": {
            "type": "boolean",
            "title": "Open Registration Enabled"
          },
          "last_registration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Registration"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "users_created_today",
          "users_created_this_week",
          "users_created_this_month",
          "open_registration_enabled",
          "last_registration"
        ],
        "title": "RegistrationStats"
      },
      "ReprocessOptions": {
        "properties": {
          "delimiter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delimiter"
          },
          "encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoding",
            "default": "utf-8"
          },
          "skip_rows": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Rows",
            "default": 0
          },
          "max_rows": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Rows"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout",
            "default": 30
          }
        },
        "type": "object",
        "title": "ReprocessOptions"
      },
      "Request": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "query_type": {
            "$ref": "#/components/schemas/QueryType"
          }
        },
        "type": "object",
        "required": [
          "query",
          "query_type"
        ],
        "title": "Request",
        "description": "Request object for search synthesizer"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "source",
          "bundle",
          "asset",
          "schema",
          "infospace",
          "run",
          "package",
          "dataset",
          "mixed"
        ],
        "title": "ResourceType"
      },
      "ResultStatus": {
        "type": "string",
        "enum": [
          "success",
          "failed"
        ],
        "title": "ResultStatus"
      },
      "RssSourceCreateRequest": {
        "properties": {
          "feed_url": {
            "type": "string",
            "title": "Feed Url"
          },
          "source_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Name"
          },
          "auto_monitor": {
            "type": "boolean",
            "title": "Auto Monitor",
            "default": false
          },
          "monitoring_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monitoring Schedule"
          },
          "target_bundle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Id"
          },
          "target_bundle_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Name"
          }
        },
        "type": "object",
        "required": [
          "feed_url"
        ],
        "title": "RssSourceCreateRequest"
      },
      "RunStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed",
          "completed_with_errors"
        ],
        "title": "RunStatus"
      },
      "SearchHistoriesOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SearchHistoryRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "SearchHistoriesOut"
      },
      "SearchHistoryCreate": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "result_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Count"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchHistoryCreate"
      },
      "SearchHistoryRead": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "result_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Count"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "query",
          "id",
          "user_id",
          "timestamp"
        ],
        "title": "SearchHistoryRead"
      },
      "SearchResultOut": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "raw": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw"
          }
        },
        "type": "object",
        "required": [
          "title",
          "url",
          "content"
        ],
        "title": "SearchResultOut"
      },
      "SearchResultsOut": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/SearchResultOut"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "results"
        ],
        "title": "SearchResultsOut"
      },
      "ShareableLinkCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "permission_level": {
            "$ref": "#/components/schemas/PermissionLevel",
            "default": "read_only"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "integer",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ShareableLinkCreate"
      },
      "ShareableLinkRead": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "permission_level": {
            "$ref": "#/components/schemas/PermissionLevel",
            "default": "read_only"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "token": {
            "type": "string",
            "title": "Token"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "integer",
            "title": "Resource Id"
          },
          "use_count": {
            "type": "integer",
            "title": "Use Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "infospace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Infospace Id"
          },
          "share_url": {
            "type": "string",
            "title": "Share Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "token",
          "user_id",
          "resource_type",
          "resource_id",
          "use_count",
          "created_at",
          "share_url"
        ],
        "title": "ShareableLinkRead"
      },
      "ShareableLinkStats": {
        "properties": {
          "total_links": {
            "type": "integer",
            "title": "Total Links"
          },
          "active_links": {
            "type": "integer",
            "title": "Active Links"
          },
          "expired_links": {
            "type": "integer",
            "title": "Expired Links"
          },
          "links_by_resource_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Links By Resource Type"
          },
          "most_shared_resources": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Most Shared Resources"
          },
          "most_used_links": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Most Used Links"
          }
        },
        "type": "object",
        "required": [
          "total_links",
          "active_links",
          "expired_links",
          "links_by_resource_type",
          "most_shared_resources",
          "most_used_links"
        ],
        "title": "ShareableLinkStats"
      },
      "ShareableLinkUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "permission_level": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PermissionLevel"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          }
        },
        "type": "object",
        "title": "ShareableLinkUpdate"
      },
      "SharedResourcePreview": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssetPreview"
              },
              {
                "$ref": "#/components/schemas/BundlePreview"
              },
              {
                "$ref": "#/components/schemas/AnnotationRunPreview"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "name",
          "content"
        ],
        "title": "SharedResourcePreview",
        "description": "The complete public-facing model for a shared resource view."
      },
      "SourceCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "kind": {
            "type": "string",
            "title": "Kind"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details",
            "default": {}
          },
          "enable_monitoring": {
            "type": "boolean",
            "title": "Enable Monitoring",
            "default": false
          },
          "schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule"
          },
          "target_bundle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Id"
          },
          "target_bundle_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bundle Name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "kind"
        ],
        "title": "SourceCreateRequest"
      },
      "SourceRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "kind": {
            "type": "string",
            "title": "Kind"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata",
            "default": {}
          },
          "monitoring_tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskRead"
            },
            "type": "array",
            "title": "Monitoring Tasks",
            "default": []
          },
          "is_monitored": {
            "type": "boolean",
            "title": "Is Monitored",
            "description": "True if the source has any enabled monitoring tasks.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "kind",
          "id",
          "uuid",
          "infospace_id",
          "user_id",
          "status",
          "created_at",
          "updated_at",
          "error_message",
          "is_monitored"
        ],
        "title": "SourceRead"
      },
      "SourceTransferRequest": {
        "properties": {
          "source_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Source Ids"
          },
          "target_infospace_id": {
            "type": "integer",
            "title": "Target Infospace Id"
          },
          "target_user_id": {
            "type": "integer",
            "title": "Target User Id"
          }
        },
        "type": "object",
        "required": [
          "source_ids",
          "target_infospace_id",
          "target_user_id"
        ],
        "title": "SourceTransferRequest"
      },
      "SourceTransferResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "source_id": {
            "type": "integer",
            "title": "Source Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          }
        },
        "type": "object",
        "required": [
          "message",
          "source_id",
          "infospace_id"
        ],
        "title": "SourceTransferResponse"
      },
      "SourceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "kind": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kind"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "title": "SourceUpdate"
      },
      "SourcesOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SourceRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "SourcesOut"
      },
      "TaskCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "schedule": {
            "type": "string",
            "title": "Schedule"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "source_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "schedule"
        ],
        "title": "TaskCreate"
      },
      "TaskRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "schedule": {
            "type": "string",
            "title": "Schedule"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "last_run_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run At"
          },
          "consecutive_failure_count": {
            "type": "integer",
            "title": "Consecutive Failure Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "schedule",
          "id",
          "infospace_id",
          "status",
          "is_enabled",
          "last_run_at",
          "consecutive_failure_count"
        ],
        "title": "TaskRead"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "active",
          "paused",
          "error"
        ],
        "title": "TaskStatus"
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "ingest",
          "annotate",
          "pipeline",
          "monitor"
        ],
        "title": "TaskType"
      },
      "TaskUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              },
              {
                "type": "null"
              }
            ]
          },
          "schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule"
          },
          "configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Enabled"
          }
        },
        "type": "object",
        "title": "TaskUpdate"
      },
      "TasksOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TaskRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "TasksOut"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "Token"
      },
      "ToolCallRequest": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "arguments": {
            "additionalProperties": true,
            "type": "object",
            "title": "Arguments"
          },
          "infospace_id": {
            "type": "integer",
            "title": "Infospace Id"
          }
        },
        "type": "object",
        "required": [
          "tool_name",
          "arguments",
          "infospace_id"
        ],
        "title": "ToolCallRequest",
        "description": "Request to execute a tool call."
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UpdatePassword"
      },
      "UserBackupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "backup_type": {
            "type": "string",
            "title": "Backup Type",
            "default": "user"
          },
          "target_user_id": {
            "type": "integer",
            "title": "Target User Id"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "target_user_id"
        ],
        "title": "UserBackupCreate"
      },
      "UserBackupRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "backup_type": {
            "type": "string",
            "title": "Backup Type"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "target_user_id": {
            "type": "integer",
            "title": "Target User Id"
          },
          "created_by_user_id": {
            "type": "integer",
            "title": "Created By User Id"
          },
          "storage_path": {
            "type": "string",
            "title": "Storage Path"
          },
          "file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size Bytes"
          },
          "content_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Hash"
          },
          "included_infospaces": {
            "type": "integer",
            "title": "Included Infospaces",
            "default": 0
          },
          "included_assets": {
            "type": "integer",
            "title": "Included Assets",
            "default": 0
          },
          "included_schemas": {
            "type": "integer",
            "title": "Included Schemas",
            "default": 0
          },
          "included_runs": {
            "type": "integer",
            "title": "Included Runs",
            "default": 0
          },
          "included_annotations": {
            "type": "integer",
            "title": "Included Annotations",
            "default": 0
          },
          "included_datasets": {
            "type": "integer",
            "title": "Included Datasets",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "is_shareable": {
            "type": "boolean",
            "title": "Is Shareable",
            "default": false
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "is_expired": {
            "type": "boolean",
            "title": "Is Expired"
          },
          "is_ready": {
            "type": "boolean",
            "title": "Is Ready"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url",
            "description": "Generate download URL if shareable.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "backup_type",
          "id",
          "uuid",
          "target_user_id",
          "created_by_user_id",
          "storage_path",
          "status",
          "created_at",
          "is_expired",
          "is_ready",
          "download_url"
        ],
        "title": "UserBackupRead"
      },
      "UserBackupRestoreRequest": {
        "properties": {
          "backup_id": {
            "type": "integer",
            "title": "Backup Id"
          },
          "target_user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target User Email"
          },
          "conflict_strategy": {
            "type": "string",
            "title": "Conflict Strategy",
            "default": "skip"
          }
        },
        "type": "object",
        "required": [
          "backup_id"
        ],
        "title": "UserBackupRestoreRequest"
      },
      "UserBackupShareRequest": {
        "properties": {
          "backup_id": {
            "type": "integer",
            "title": "Backup Id"
          },
          "is_shareable": {
            "type": "boolean",
            "title": "Is Shareable",
            "default": true
          },
          "expiration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Hours"
          }
        },
        "type": "object",
        "required": [
          "backup_id"
        ],
        "title": "UserBackupShareRequest"
      },
      "UserBackupUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_shareable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Shareable"
          }
        },
        "type": "object",
        "title": "UserBackupUpdate"
      },
      "UserBackupsOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserBackupRead"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "UserBackupsOut"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "tier": {
            "$ref": "#/components/schemas/UserTier",
            "default": "tier_0"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "send_welcome_email": {
            "type": "boolean",
            "title": "Send Welcome Email",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserCreateOpen": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreateOpen"
      },
      "UserOut": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "tier": {
            "$ref": "#/components/schemas/UserTier",
            "default": "tier_0"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "UserOut"
      },
      "UserProfileStats": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "infospaces_count": {
            "type": "integer",
            "title": "Infospaces Count"
          },
          "assets_count": {
            "type": "integer",
            "title": "Assets Count"
          },
          "annotations_count": {
            "type": "integer",
            "title": "Annotations Count"
          },
          "member_since": {
            "type": "string",
            "format": "date-time",
            "title": "Member Since"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "infospaces_count",
          "assets_count",
          "annotations_count",
          "member_since"
        ],
        "title": "UserProfileStats",
        "description": "User profile statistics."
      },
      "UserProfileUpdate": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "Short bio (max 500 characters)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Longer description (max 2000 characters)"
          }
        },
        "type": "object",
        "title": "UserProfileUpdate",
        "description": "Dedicated schema for profile-only updates (no email/password)."
      },
      "UserPublicProfile": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at"
        ],
        "title": "UserPublicProfile",
        "description": "Public user profile (no sensitive information)."
      },
      "UserTier": {
        "type": "string",
        "enum": [
          "tier_0",
          "free",
          "pro",
          "tier_1",
          "enterprise"
        ],
        "title": "UserTier"
      },
      "UserUpdate": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "Short bio (max 500 characters)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Longer description (max 2000 characters)"
          }
        },
        "type": "object",
        "title": "UserUpdateMe"
      },
      "UsersOut": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserOut"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "UsersOut"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__api__v1__entities__routes__SearchType": {
        "type": "string",
        "enum": [
          "text",
          "semantic"
        ],
        "title": "SearchType"
      },
      "app__api__v1__search__routes__SearchType": {
        "type": "string",
        "enum": [
          "text",
          "semantic",
          "structured"
        ],
        "title": "SearchType"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}
