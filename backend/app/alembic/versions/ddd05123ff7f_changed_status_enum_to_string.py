"""changed status enum to string

Revision ID: ddd05123ff7f
Revises: d662980a39cf
Create Date: 2025-05-05 12:08:14.037192

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ddd05123ff7f'
down_revision = 'd662980a39cf'
branch_labels = None
depends_on = None

# Define the old enum type name for dropping/casting
old_enum_type_name = 'classificationresultstatus'
old_enum_type = postgresql.ENUM('success', 'failed', name=old_enum_type_name)
new_string_type = sa.String(50) # Use standard String type

def upgrade():
    # ### commands auto generated by Alembic - ADJUSTED ###
    # Change the column type from the native ENUM to String (VARCHAR)
    # Use USING status::text to cast existing enum values to text during the alteration
    op.alter_column('classificationresult', 'status',
               existing_type=old_enum_type,
               type_=new_string_type, # Change to standard String
               existing_nullable=False,
               postgresql_using='status::text') # Cast existing values

    # --- ADD: Drop the no longer needed ENUM type from the database ---
    # This ensures we are truly using VARCHAR
    op.execute(f"DROP TYPE {old_enum_type_name};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - ADJUSTED ###
    # --- ADD: Recreate the ENUM type BEFORE changing the column back ---
    # Use the same definition as in the first migration
    enum_type = sa.Enum('success', 'failed', name=old_enum_type_name)
    enum_type.create(op.get_bind(), checkfirst=True)

    # Change the column type back from String (VARCHAR) to the native ENUM
    # Use USING status::classificationresultstatus to cast text back to the enum type
    op.alter_column('classificationresult', 'status',
               existing_type=new_string_type,
               type_=old_enum_type, # Change back to native ENUM
               existing_nullable=False,
               postgresql_using=f'status::{old_enum_type_name}') # Cast to the recreated enum type name

    # ### end Alembic commands ###
