"""dropping many to many links for assetbundles

Revision ID: 29136535186b
Revises: 9ec1d6820421
Create Date: 2025-10-05 12:56:38.679576

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import pgvector
from pgvector.sqlalchemy import Vector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '29136535186b'
down_revision = '9ec1d6820421'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assetbundlelink')
    op.add_column('asset', sa.Column('bundle_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_asset_bundle_id'), 'asset', ['bundle_id'], unique=False)
    op.drop_constraint(op.f('asset_parent_asset_id_fkey'), 'asset', type_='foreignkey')
    op.create_foreign_key(None, 'asset', 'bundle', ['bundle_id'], ['id'])
    op.create_foreign_key(None, 'asset', 'asset', ['parent_asset_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'asset', type_='foreignkey')
    op.drop_constraint(None, 'asset', type_='foreignkey')
    op.create_foreign_key(op.f('asset_parent_asset_id_fkey'), 'asset', 'asset', ['parent_asset_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_asset_bundle_id'), table_name='asset')
    op.drop_column('asset', 'bundle_id')
    op.create_table('assetbundlelink',
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bundle_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name=op.f('assetbundlelink_asset_id_fkey')),
    sa.ForeignKeyConstraint(['bundle_id'], ['bundle.id'], name=op.f('assetbundlelink_bundle_id_fkey')),
    sa.PrimaryKeyConstraint('asset_id', 'bundle_id', name=op.f('assetbundlelink_pkey'))
    )
    # ### end Alembic commands ###
