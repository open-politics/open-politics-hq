"""Add partial unique index to annotation schemas

Revision ID: 3b114def669a
Revises: 45c60dc296a7
Create Date: 2025-06-25 20:26:13.689824

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import pgvector
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision = '3b114def669a'
down_revision = '45c60dc296a7'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('annotationschema_infospace_id_name_version_key'), 'annotationschema', type_='unique')
    op.create_index('ix_unique_active_schema_name_version', 'annotationschema', ['infospace_id', 'name', 'version'], unique=True, postgresql_where=sa.text('is_active = true'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_unique_active_schema_name_version', table_name='annotationschema', postgresql_where=sa.text('is_active = true'))
    op.create_unique_constraint(op.f('annotationschema_infospace_id_name_version_key'), 'annotationschema', ['infospace_id', 'name', 'version'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
