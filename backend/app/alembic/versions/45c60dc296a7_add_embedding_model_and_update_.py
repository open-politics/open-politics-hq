"""add_embedding_model_and_update_assetchunk

Revision ID: 45c60dc296a7
Revises: 4b7b0293f36b
Create Date: 2025-06-25 12:52:47.351632

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import pgvector
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision = '45c60dc296a7'
down_revision = '4b7b0293f36b'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('embeddingmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('provider', sa.Enum('OLLAMA', 'JINA', 'OPENAI', 'HUGGINGFACE', name='embeddingprovider'), nullable=False),
    sa.Column('dimension', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('max_sequence_length', sa.Integer(), nullable=True),
    sa.Column('embedding_time_ms', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'provider')
    )
    op.create_index(op.f('ix_embeddingmodel_name'), 'embeddingmodel', ['name'], unique=False)
    op.create_index('ix_embeddingmodel_provider_active', 'embeddingmodel', ['provider', 'is_active'], unique=False)
    op.add_column('assetchunk', sa.Column('embedding_model_id', sa.Integer(), nullable=True))
    op.add_column('assetchunk', sa.Column('embedding_json', sa.JSON(), nullable=True))
    op.add_column('assetchunk', sa.Column('embedding_legacy', pgvector.sqlalchemy.vector.VECTOR(dim=1024), nullable=True))
    op.drop_index(op.f('ix_assetchunk_embedding'), table_name='assetchunk', postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.create_index('ix_assetchunk_embedding_legacy', 'assetchunk', ['embedding_legacy'], unique=False, postgresql_using='ivfflat', postgresql_with={'lists': 100})
    op.create_index('ix_assetchunk_embedding_model', 'assetchunk', ['embedding_model_id'], unique=False)
    op.create_foreign_key(None, 'assetchunk', 'embeddingmodel', ['embedding_model_id'], ['id'])
    op.drop_column('assetchunk', 'embedding')
    op.drop_column('assetchunk', 'embedding_model')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('assetchunk', sa.Column('embedding_model', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('assetchunk', sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1024), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'assetchunk', type_='foreignkey')
    op.drop_index('ix_assetchunk_embedding_model', table_name='assetchunk')
    op.drop_index('ix_assetchunk_embedding_legacy', table_name='assetchunk', postgresql_using='ivfflat', postgresql_with={'lists': 100})
    op.create_index(op.f('ix_assetchunk_embedding'), 'assetchunk', ['embedding'], unique=False, postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.drop_column('assetchunk', 'embedding_legacy')
    op.drop_column('assetchunk', 'embedding_json')
    op.drop_column('assetchunk', 'embedding_model_id')
    op.drop_index('ix_embeddingmodel_provider_active', table_name='embeddingmodel')
    op.drop_index(op.f('ix_embeddingmodel_name'), table_name='embeddingmodel')
    op.drop_table('embeddingmodel')
    # ### end Alembic commands ###
